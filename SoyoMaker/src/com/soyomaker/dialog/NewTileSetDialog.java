/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJDialog.java
 *
 * Created on 2012-5-8, 21:02:21
 */
package com.soyomaker.dialog;

import com.soyomaker.AppData;
import com.soyomaker.model.map.Map;
import com.soyomaker.model.map.TileSet;
import com.soyomaker.util.ImagePreviewer;
import com.soyomaker.util.TileCutter;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Administrator
 */
public class NewTileSetDialog extends javax.swing.JDialog {

    /** Creates new form NewJDialog
     * @param parent
     * @param modal
     */
    public NewTileSetDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        importTilesetButton = new javax.swing.JButton();
        cancleButton = new javax.swing.JButton();
        importAutoTilesetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("添加图集");
        setResizable(false);

        importTilesetButton.setText("导入普通图集");
        importTilesetButton.setName("importTilesetButton"); // NOI18N
        importTilesetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTilesetButtonActionPerformed(evt);
            }
        });

        cancleButton.setText("关闭窗口");
        cancleButton.setName("cancleButton"); // NOI18N
        cancleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleButtonActionPerformed(evt);
            }
        });

        importAutoTilesetButton.setText("导入自动元件");
        importAutoTilesetButton.setName("importAutoTilesetButton"); // NOI18N
        importAutoTilesetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importAutoTilesetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(importTilesetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(importAutoTilesetButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(cancleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addGap(73, 73, 73))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {importAutoTilesetButton, importTilesetButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importTilesetButton)
                    .addComponent(importAutoTilesetButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(cancleButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importTilesetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTilesetButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(AppData.getInstance().getCurProject().getPath() + File.separatorChar + "image" + File.separatorChar + "tileset");
        // 设置文件选取器
        ImagePreviewer imagePreviewer = new ImagePreviewer(chooser);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG or JPG Images", "png", "jpg");
        chooser.setAccessory(imagePreviewer);
        chooser.addChoosableFileFilter(filter);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setMultiSelectionEnabled(true);
        int ret = chooser.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            final File[] files = chooser.getSelectedFiles();
            for (int i = 0; i < files.length; i++) {
                File file = files[i];
                TileSet tileset = new TileSet();
                tileset.setName(file.getName());
                tileset.setTilebmpFile(file);
                Map map = AppData.getInstance().getCurrentMap();
                try {
                    tileset.importTileBitmap(file, new TileCutter(map.getTileWidth(), map.getTileHeight()));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                AppData.getInstance().addTileSet(tileset);
            }
            dispose();
        }
    }//GEN-LAST:event_importTilesetButtonActionPerformed

    private void cancleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancleButtonActionPerformed

    private void importAutoTilesetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importAutoTilesetButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(AppData.getInstance().getCurProject().getPath() + File.separatorChar + "image" + File.separatorChar + "autotile");
        // 设置文件选取器
        ImagePreviewer imagePreviewer = new ImagePreviewer(chooser);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG or JPG Images", "png", "jpg");
        chooser.setAccessory(imagePreviewer);
        chooser.addChoosableFileFilter(filter);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setMultiSelectionEnabled(true);
        int ret = chooser.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            final File[] files = chooser.getSelectedFiles();
            for (int i = 0; i < files.length; i++) {
                File file = files[i];
                TileSet tileset = new TileSet();
                tileset.setName(file.getName());
                tileset.setTilebmpFile(file);
                tileset.setAutoTile(true);
                Map map = AppData.getInstance().getCurrentMap();
                try {
                    tileset.importTileBitmap(file, new TileCutter(map.getTileWidth(), map.getTileHeight()));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                AppData.getInstance().addTileSet(tileset);
            }
            dispose();
        }
    }//GEN-LAST:event_importAutoTilesetButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancleButton;
    private javax.swing.JButton importAutoTilesetButton;
    private javax.swing.JButton importTilesetButton;
    // End of variables declaration//GEN-END:variables
}
