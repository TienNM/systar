/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EnemyTroopPanel.java
 *
 * Created on 2011-9-3, 23:42:15
 */
package com.soyomaker.data.ui;

import com.soyomaker.AppData;
import com.soyomaker.data.listener.DataChangeListener;
import com.soyomaker.data.listener.DataChangedEvent;
import com.soyomaker.data.model.Config;
import com.soyomaker.data.model.Enemy;
import com.soyomaker.data.model.EnemyTroop;
import com.soyomaker.data.model.EnemyTroopTableModel;
import com.soyomaker.data.model.Equip;
import com.soyomaker.data.model.Item;
import com.soyomaker.data.model.Model;
import com.soyomaker.data.model.Player;
import com.soyomaker.data.model.Skill;
import com.soyomaker.data.model.Status;
import com.soyomaker.data.model.Vocation;

/**
 *
 * @author Administrator
 */
public class EnemyTroopPanel extends javax.swing.JPanel implements DataChangeListener {

    /** Creates new form EnemyTroopPanel */
    public EnemyTroopPanel() {
        initComponents();
        AppData.getInstance().getCurProject().getDataManager().addDataChangeListener(this);
    }
    private EnemyTroopTableModel etm = new EnemyTroopTableModel();

    /**
     *
     */
    public void refresh() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        addEnemyTroopButton = new javax.swing.JButton();
        editEnemyTroopButton = new javax.swing.JButton();
        removeEnemyTroopButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enemyTroopTable = new javax.swing.JTable();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        addEnemyTroopButton.setText("添加敌人队伍");
        addEnemyTroopButton.setFocusable(false);
        addEnemyTroopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addEnemyTroopButton.setName("addEnemyTroopButton"); // NOI18N
        addEnemyTroopButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addEnemyTroopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEnemyTroopButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addEnemyTroopButton);

        editEnemyTroopButton.setText("编辑敌人队伍");
        editEnemyTroopButton.setFocusable(false);
        editEnemyTroopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editEnemyTroopButton.setName("editEnemyTroopButton"); // NOI18N
        editEnemyTroopButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editEnemyTroopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEnemyTroopButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editEnemyTroopButton);

        removeEnemyTroopButton.setText("删除敌人队伍");
        removeEnemyTroopButton.setFocusable(false);
        removeEnemyTroopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeEnemyTroopButton.setName("removeEnemyTroopButton"); // NOI18N
        removeEnemyTroopButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeEnemyTroopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEnemyTroopButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(removeEnemyTroopButton);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        enemyTroopTable.setModel(etm);
        enemyTroopTable.setName("enemyTroopTable"); // NOI18N
        enemyTroopTable.setRowHeight(20);
        jScrollPane1.setViewportView(enemyTroopTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addEnemyTroopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEnemyTroopButtonActionPerformed
        // TODO add your handling code here:
        EnemyTroop enemyTroop = new EnemyTroop();
        enemyTroop.setIndex(AppData.getInstance().getCurProject().getDataManager().allocateIndex(Model.ENEMYTROOP));
        AppData.getInstance().getCurProject().getDataManager().saveModel(Model.ENEMYTROOP, enemyTroop);
        EditEnemyTroopDialog eid = new EditEnemyTroopDialog(this, true, enemyTroop);
        eid.setVisible(true);
    }//GEN-LAST:event_addEnemyTroopButtonActionPerformed

    private void removeEnemyTroopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEnemyTroopButtonActionPerformed
        // TODO add your handling code here:
        int id = enemyTroopTable.getSelectedRow();
        if (id < 0 || id >= AppData.getInstance().getCurProject().getDataManager().size(Model.ENEMYTROOP)) {
            return;
        }
        AppData.getInstance().getCurProject().getDataManager().removeModel(Model.ENEMYTROOP, AppData.getInstance().getCurProject().getDataManager().getModels(Model.ENEMYTROOP)[id].getIndex());
    }//GEN-LAST:event_removeEnemyTroopButtonActionPerformed

    private void editEnemyTroopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEnemyTroopButtonActionPerformed
        // TODO add your handling code here:
        int id = enemyTroopTable.getSelectedRow();
        if (id < 0 || id >= AppData.getInstance().getCurProject().getDataManager().size(Model.ENEMYTROOP)) {
            return;
        }
        EnemyTroop enemyTroop = (EnemyTroop) AppData.getInstance().getCurProject().getDataManager().getModels(Model.ENEMYTROOP)[id];
        EditEnemyTroopDialog eid = new EditEnemyTroopDialog(this, true, enemyTroop);
        eid.setVisible(true);
    }//GEN-LAST:event_editEnemyTroopButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEnemyTroopButton;
    private javax.swing.JButton editEnemyTroopButton;
    private javax.swing.JTable enemyTroopTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton removeEnemyTroopButton;
    // End of variables declaration//GEN-END:variables

    public void configChanged(DataChangedEvent sce, Config config) {
    }

    public void playerAdded(DataChangedEvent sce, Player player) {
    }

    public void playerRemoved(DataChangedEvent sce, int id) {
    }

    public void vocationAdded(DataChangedEvent sce, Vocation vocation) {
    }

    public void vocationRemoved(DataChangedEvent sce, int id) {
    }

    public void statusAdded(DataChangedEvent sce, Status status) {
    }

    public void statusRemoved(DataChangedEvent sce, int id) {
    }

    public void skillAdded(DataChangedEvent sce, Skill skill) {
    }

    public void skillRemoved(DataChangedEvent sce, int id) {
    }

    public void enemyAdded(DataChangedEvent sce, Enemy enemy) {
    }

    public void enemyRemoved(DataChangedEvent sce, int id) {
    }

    public void enemyTroopAdded(DataChangedEvent sce, EnemyTroop enemytroop) {
        enemyTroopTable.updateUI();
    }

    public void enemyTroopRemoved(DataChangedEvent sce, int id) {
        enemyTroopTable.updateUI();
    }

    public void equipAdded(DataChangedEvent sce, Equip equip) {
    }

    public void equipRemoved(DataChangedEvent sce, int id) {
    }

    public void itemAdded(DataChangedEvent sce, Item item) {
    }

    public void itemRemoved(DataChangedEvent sce, int id) {
    }
}
