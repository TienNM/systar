/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmemyPanel.java
 *
 * Created on 2011-9-3, 23:42:04
 */
package com.soyomaker.data.ui;

import com.soyomaker.AppData;
import com.soyomaker.data.listener.DataChangeListener;
import com.soyomaker.data.listener.DataChangedEvent;
import com.soyomaker.data.model.Config;
import com.soyomaker.data.model.Enemy;
import com.soyomaker.data.model.EnemyTableModel;
import com.soyomaker.data.model.EnemyTroop;
import com.soyomaker.data.model.Item;
import com.soyomaker.data.model.Model;
import com.soyomaker.data.model.Player;
import com.soyomaker.data.model.Skill;
import com.soyomaker.data.model.Buff;
import com.soyomaker.data.model.Vocation;

/**
 *
 * @author Administrator
 */
public class EnemyPanel extends javax.swing.JPanel implements DataChangeListener {

    /** Creates new form EmemyPanel */
    public EnemyPanel() {
        initComponents();
        AppData.getInstance().getCurProject().getDataManager().addDataChangeListener(this);
    }

    /**
     *
     */
    public void refresh() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        addEnemyButton = new javax.swing.JButton();
        editEnemyButton = new javax.swing.JButton();
        removeEnemyButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enemyTable = new javax.swing.JTable();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        addEnemyButton.setText("添加敌人");
        addEnemyButton.setFocusable(false);
        addEnemyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addEnemyButton.setName("addEnemyButton"); // NOI18N
        addEnemyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addEnemyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEnemyButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addEnemyButton);

        editEnemyButton.setText("编辑敌人");
        editEnemyButton.setFocusable(false);
        editEnemyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editEnemyButton.setName("editEnemyButton"); // NOI18N
        editEnemyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editEnemyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEnemyButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editEnemyButton);

        removeEnemyButton.setText("删除敌人");
        removeEnemyButton.setFocusable(false);
        removeEnemyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeEnemyButton.setName("removeEnemyButton"); // NOI18N
        removeEnemyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeEnemyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEnemyButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(removeEnemyButton);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        enemyTable.setModel(etm);
        enemyTable.setName("enemyTable"); // NOI18N
        enemyTable.setRowHeight(20);
        jScrollPane1.setViewportView(enemyTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeEnemyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEnemyButtonActionPerformed
        // TODO add your handling code here:
        int id = enemyTable.getSelectedRow();
        if (id < 0 || id >= AppData.getInstance().getCurProject().getDataManager().size(Model.ENEMY)) {
            return;
        }
        AppData.getInstance().getCurProject().getDataManager().removeModel(Model.ENEMY, AppData.getInstance().getCurProject().getDataManager().getModels(Model.ENEMY)[id].getIndex());
    }//GEN-LAST:event_removeEnemyButtonActionPerformed

    private void editEnemyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEnemyButtonActionPerformed
        // TODO add your handling code here:
        int id = enemyTable.getSelectedRow();
        if (id < 0 || id >= AppData.getInstance().getCurProject().getDataManager().size(Model.ENEMY)) {
            return;
        }
        Enemy enemy = (Enemy) AppData.getInstance().getCurProject().getDataManager().getModels(Model.ENEMY)[id];
        EditEnemyDialog eid = new EditEnemyDialog(this, true, enemy);
        eid.setVisible(true);
        enemyTable.updateUI();
    }//GEN-LAST:event_editEnemyButtonActionPerformed

    private void addEnemyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEnemyButtonActionPerformed
        // TODO add your handling code here:
        Enemy enemy = new Enemy();
        enemy.setIndex(AppData.getInstance().getCurProject().getDataManager().allocateIndex(Model.ENEMY));
        AppData.getInstance().getCurProject().getDataManager().saveModel(Model.ENEMY, enemy);
        EditEnemyDialog eid = new EditEnemyDialog(this, true, enemy);
        eid.setVisible(true);
        enemyTable.updateUI();
    }//GEN-LAST:event_addEnemyButtonActionPerformed
    private EnemyTableModel etm = new EnemyTableModel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEnemyButton;
    private javax.swing.JButton editEnemyButton;
    private javax.swing.JTable enemyTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton removeEnemyButton;
    // End of variables declaration//GEN-END:variables

    public void configChanged(DataChangedEvent sce, Config config) {
    }

    public void playerAdded(DataChangedEvent sce, Player player) {
    }

    public void playerRemoved(DataChangedEvent sce, int id) {
    }

    public void vocationAdded(DataChangedEvent sce, Vocation vocation) {
    }

    public void vocationRemoved(DataChangedEvent sce, int id) {
    }

    public void statusAdded(DataChangedEvent sce, Buff status) {
    }

    public void statusRemoved(DataChangedEvent sce, int id) {
    }

    public void skillAdded(DataChangedEvent sce, Skill skill) {
    }

    public void skillRemoved(DataChangedEvent sce, int id) {
    }

    public void enemyAdded(DataChangedEvent sce, Enemy enemy) {
        enemyTable.updateUI();
    }

    public void enemyRemoved(DataChangedEvent sce, int id) {
        enemyTable.updateUI();
    }

    public void enemyTroopAdded(DataChangedEvent sce, EnemyTroop enemytroop) {
    }

    public void enemyTroopRemoved(DataChangedEvent sce, int id) {
    }

    public void itemAdded(DataChangedEvent sce, Item item) {
    }

    public void itemRemoved(DataChangedEvent sce, int id) {
    }
}
