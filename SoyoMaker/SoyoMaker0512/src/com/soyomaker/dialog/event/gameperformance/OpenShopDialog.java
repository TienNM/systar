/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ItemShopDialog.java
 *
 * Created on 2011-5-14, 18:14:38
 */
package com.soyomaker.dialog.event.gameperformance;

import com.soyomaker.AppData;
import com.soyomaker.config.Configuration;
import com.soyomaker.data.model.Equip;
import com.soyomaker.data.model.Item;
import com.soyomaker.data.model.Model;
import com.soyomaker.dialog.AbCommandDialog;
import com.soyomaker.dialog.ScriptDialog;
import com.soyomaker.model.map.CommandFactory;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class OpenShopDialog extends AbCommandDialog {

    /** Creates new form ItemShopDialog
     * @param parent
     * @param modal
     * @param typeId
     */
    public OpenShopDialog(ScriptDialog parent, boolean modal, int typeId) {
        super(parent, modal, typeId);
        sd = parent;
        initComponents();
        setLocationRelativeTo(null);
        itemm = (DefaultTableModel) itemTable.getModel();
        equipm = (DefaultTableModel) equipTable.getModel();
        Item[] items = (Item[]) AppData.getInstance().getCurProject().getDataManager().getModels(Model.ITEM);
        Equip[] equips = (Equip[]) AppData.getInstance().getCurProject().getDataManager().getModels(Model.EQUIP);

        for (int i = 0; i < items.length; i++) {
            Object[] obj = new Object[]{true, items[i].getIndex(), items[i].name, items[i].price};
            itemm.addRow(obj);
        }

        for (int i = 0; i < equips.length; i++) {
            Object[] obj = new Object[]{true, equips[i].getIndex(), equips[i].name, equips[i].price};
            equipm.addRow(obj);
        }

    }
    private ScriptDialog sd;
    private DefaultTableModel itemm;
    private DefaultTableModel equipm;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        okButton = new javax.swing.JButton();
        cancleButton = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        allItemChooseButton = new javax.swing.JButton();
        allItemNotChooseButton = new javax.swing.JButton();
        allEquipChooseButton = new javax.swing.JButton();
        allEquipNotCHooseButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        equipTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(OpenShopDialog.class);
        setTitle(resourceMap.getString("title")); // NOI18N
        setResizable(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "有售", "编号", "物品名称", "物品价格"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setName("itemTable"); // NOI18N
        jScrollPane1.setViewportView(itemTable);

        okButton.setText("确定");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancleButton.setText("取消");
        cancleButton.setName("cancleButton"); // NOI18N
        cancleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleButtonActionPerformed(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        allItemChooseButton.setText("物品全选");
        allItemChooseButton.setFocusable(false);
        allItemChooseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        allItemChooseButton.setName("allItemChooseButton"); // NOI18N
        allItemChooseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        allItemChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allItemChooseButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(allItemChooseButton);

        allItemNotChooseButton.setText("物品全不选");
        allItemNotChooseButton.setFocusable(false);
        allItemNotChooseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        allItemNotChooseButton.setName("allItemNotChooseButton"); // NOI18N
        allItemNotChooseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        allItemNotChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allItemNotChooseButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(allItemNotChooseButton);

        allEquipChooseButton.setText("装备全选");
        allEquipChooseButton.setFocusable(false);
        allEquipChooseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        allEquipChooseButton.setName("allEquipChooseButton"); // NOI18N
        allEquipChooseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        allEquipChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allEquipChooseButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(allEquipChooseButton);

        allEquipNotCHooseButton.setText("装备全不选");
        allEquipNotCHooseButton.setFocusable(false);
        allEquipNotCHooseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        allEquipNotCHooseButton.setName("allEquipNotCHooseButton"); // NOI18N
        allEquipNotCHooseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        allEquipNotCHooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allEquipNotCHooseButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(allEquipNotCHooseButton);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        equipTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "有售", "编号", "装备名称", "装备价格"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equipTable.setName("equipTable"); // NOI18N
        jScrollPane2.setViewportView(equipTable);

        jLabel1.setText("物品列表");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("装备列表");
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(317, 317, 317))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(233, Short.MAX_VALUE)
                .addComponent(okButton)
                .addGap(18, 18, 18)
                .addComponent(cancleButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancleButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        sb.append("{");
        ArrayList<Integer> ids = new ArrayList<Integer>();
        for (int i = 0; i < itemTable.getRowCount(); i++) {
            if (Boolean.parseBoolean(itemTable.getModel().getValueAt(i, 0).toString()) == true) {
                ids.add(Configuration.Prefix.ITEM_MASK + Integer.parseInt(itemTable.getModel().getValueAt(i, 1).toString()));
            }
        }
        for (int i = 0; i < equipTable.getRowCount(); i++) {
            if (Boolean.parseBoolean(equipTable.getModel().getValueAt(i, 0).toString()) == true) {
                ids.add(Configuration.Prefix.EQUIP_MASK + Integer.parseInt(equipTable.getModel().getValueAt(i, 1).toString()));
            }
        }
        for (int i = 0; i < ids.size(); i++) {
            if (i == ids.size() - 1) {
                sb.append(ids.get(i));
            } else {
                sb.append(ids.get(i)).append(",");
            }
        }
        sb.append("}");
        mCommand = CommandFactory.createCommand(mTypeId);
        mCommand.addParameter(sb.toString());
        System.out.println(mCommand);
//        sd.insertScriptData(sd.npcPane.eventTable.getSelectedRow(),
//                "globalData.proxy:openShop(" + sb.toString() + ")");
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancleButtonActionPerformed

    private void allItemChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allItemChooseButtonActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < itemm.getRowCount(); i++) {
            itemm.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_allItemChooseButtonActionPerformed

    private void allItemNotChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allItemNotChooseButtonActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < itemm.getRowCount(); i++) {
            itemm.setValueAt(false, i, 0);
        }
    }//GEN-LAST:event_allItemNotChooseButtonActionPerformed

    private void allEquipChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allEquipChooseButtonActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < equipm.getRowCount(); i++) {
            equipm.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_allEquipChooseButtonActionPerformed

    private void allEquipNotCHooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allEquipNotCHooseButtonActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < equipm.getRowCount(); i++) {
            equipm.setValueAt(false, i, 0);
        }
    }//GEN-LAST:event_allEquipNotCHooseButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allEquipChooseButton;
    private javax.swing.JButton allEquipNotCHooseButton;
    private javax.swing.JButton allItemChooseButton;
    private javax.swing.JButton allItemNotChooseButton;
    private javax.swing.JButton cancleButton;
    private javax.swing.JTable equipTable;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
