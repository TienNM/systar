// generated by de.enough.doc2java.Doc2Java (www.enough.de) on Sun Feb 29 19:10:55 CET 2004
package other.javax.javax.microedition;

import java.io.IOException;

/**
 * This is the most basic type of generic connection.
 * 
 * This is the most basic type of generic connection. Only the close
 * method is defined. The open method is not defined here because opening is
 * always done using the Connector.open() methods.
 * <HR>
 * 
 * 
 * @since CLDC 1.0
 */
public interface Connection
{
	/**
	 * Close the connection.
	 * <p>
	 * When a connection has been closed, access to any of its methods
	 * except this close() will cause an IOException to be thrown.
	 * Closing an already closed connection has no effect. Streams
	 * derived from the connection may be open when method is called.
	 * Any open streams will cause the connection to be held open
	 * until they themselves are closed. In this latter case access
	 * to the open streams is permitted, but access to the connection
	 * is not.
	 * 
	 * @throws IOException - If an I/O error occurs
	 */
	public void close() throws IOException;

}
