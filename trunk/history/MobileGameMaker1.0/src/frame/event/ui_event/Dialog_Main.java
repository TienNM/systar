package frame.event.ui_event;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JDialog;
import module.EventManager;
import javax.swing.table.DefaultTableModel;

/**
 * 
 * 指令集面板
 */
public class Dialog_Main extends JDialog implements ActionListener {

    private UI_Event_Manager uiem = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panel_game;
    private javax.swing.JPanel panel_player;
    private javax.swing.JPanel panel_process;
    public static EventManager em;

    /** Creates new form Dialog_Main */
    public Dialog_Main(EventManager parent) {
        super(parent, true);
        em = parent;
        uiem = new UI_Event_Manager(this);
        init();
    }

    public static DefaultTableModel getEventTM() {
        return em.eventTM;
    }

    public static EventManager getEventDialog() {
        return em;
    }

    public void actionPerformed(ActionEvent e) {
        // 当按钮被按下时关闭主面板，同时打开对应的子面板
        setVisible(false);
        String text = ((Event_Button) e.getSource()).getText();
        uiem.getEvent_Dialog(text).setVisible(true);
    }

    public static void insertEventTM(int row, String sc) {
        System.out.println("command: " + sc);
        System.out.println(getEventTM().getRowCount());
        int n = 0;
        for (int i = 0; i < getEventDialog().curRow; i++) {
            String s = getEventTM().getValueAt(i, 0).toString();
//            s.trim();
            if (s.trim().startsWith("IF") || s.trim().startsWith("WHILE")) {
                n += 1;
            }
            if (s.trim().startsWith("ENDIF") || s.trim().startsWith("ENDWHILE")) {
                n -= 1;
            }
        }
        System.out.println("n " + n);
        StringBuilder c = new StringBuilder();
        for (int i = 0; i < n; i++) {
            c.append("    ");
        }
        String[] rowData = {c.toString() + sc};
        getEventTM().insertRow(row, rowData);
        System.out.println("curRow " + getEventDialog().curRow);
    }
    // End of variables declaration//GEN-END:variables

    private void init() {
        initComponents();
        Dimension screenSize =
            Toolkit.getDefaultToolkit().getScreenSize();
        Dimension labelSize = this.getSize();
        this.setLocation(screenSize.width / 2 - (labelSize.width / 2),
            screenSize.height / 2 - (labelSize.height / 2));//设置位置屏幕中部
        this.setResizable(false);
        initPanel_process();
        initPanel_game();
        initPanel_player();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_process = new javax.swing.JPanel();
        panel_game = new javax.swing.JPanel();
        panel_player = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("指令集");

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        panel_process.setName("panel_process"); // NOI18N
        panel_process.setLayout(null);
        jTabbedPane1.addTab("流程", panel_process);

        panel_game.setName("panel_game"); // NOI18N
        panel_game.setLayout(null);
        jTabbedPane1.addTab("游戏", panel_game);

        panel_player.setName("panel_player"); // NOI18N
        panel_player.setLayout(null);
        jTabbedPane1.addTab("角色", panel_player);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
            getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(
            javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            layout.createSequentialGroup().addContainerGap().addComponent(
            jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE,
            222, Short.MAX_VALUE).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(
            javax.swing.GroupLayout.Alignment.LEADING).addGroup(
            layout.createSequentialGroup().addContainerGap().addComponent(
            jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
            254, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
            Short.MAX_VALUE)));

        getAccessibleContext().setAccessibleName(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initPanel_game() {
        String[] buttonTexts = uiem.getTexts(UI_Event_Manager.GAME);
        System.out.println("buttonTexts:" + buttonTexts.length);
        for (int i = 0; i < buttonTexts.length; i++) {
            Event_Button eb = new Event_Button(this, buttonTexts[i]);
            eb.setLocation(10 + (i % 2) * (6 * eb.getWidth() / 5), 10 + (i / 2)
                * (6 * eb.getHeight() / 5));
            panel_game.add(eb);
            eb.setVisible(true);
//            System.out.println("添加：" + eb.getText());
        }
    }

    private void initPanel_player() {

        String[] buttonTexts = uiem.getTexts(UI_Event_Manager.PLAYER);
        for (int i = 0; i < buttonTexts.length; i++) {
            Event_Button eb = new Event_Button(this, buttonTexts[i]);
            eb.setLocation(10 + (i % 2) * (6 * eb.getWidth() / 5), 10 + (i / 2)
                * (6 * eb.getHeight() / 5));
            panel_player.add(eb);
            eb.setVisible(true);
//            System.out.println("添加：" + eb.getText());
        }
    }

    private void initPanel_process() {
        String[] buttonTexts = uiem.getTexts(UI_Event_Manager.PROCESS);
        for (int i = 0; i < buttonTexts.length; i++) {
            Event_Button eb = new Event_Button(this, buttonTexts[i]);
            eb.setLocation(10 + (i % 2) * (6 * eb.getWidth() / 5), 10 + (i / 2)
                * (6 * eb.getHeight() / 5));
            this.panel_process.add(eb);
            eb.setVisible(true);
//            System.out.println("添加：" + eb.getText());
        }
    }
}
