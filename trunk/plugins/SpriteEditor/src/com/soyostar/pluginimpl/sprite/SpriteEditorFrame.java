/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SpriteManagerDialog.java
 *
 * Created on 2011-2-23, 19:37:28
 */
package com.soyostar.pluginimpl.sprite;

import com.soyostar.plugin.IPlugin;
import com.soyostar.pluginimpl.sprite.adpter.FrameEditMouseAdapter;
import com.soyostar.pluginimpl.sprite.adpter.TileSetEditMouseAdapter;
import com.soyostar.pluginimpl.sprite.data.Proxy;
import com.soyostar.pluginimpl.sprite.dialog.AboutDialog;
import com.soyostar.pluginimpl.sprite.dialog.HelpDialog;
import com.soyostar.pluginimpl.sprite.dialog.NewAnimationDialog;
import com.soyostar.pluginimpl.sprite.dialog.TileSetInformationDialog;
import com.soyostar.pluginimpl.sprite.information.SoftInformation;
import com.soyostar.pluginimpl.sprite.listener.ActionChangeListener;
import com.soyostar.pluginimpl.sprite.listener.ActionChangedEvent;
import com.soyostar.pluginimpl.sprite.listener.AnimationChangeListener;
import com.soyostar.pluginimpl.sprite.listener.AnimationChangedEvent;
import com.soyostar.pluginimpl.sprite.listener.FrameChangeListener;
import com.soyostar.pluginimpl.sprite.listener.FrameChangedEvent;
import com.soyostar.pluginimpl.sprite.listener.LayerChangeListener;
import com.soyostar.pluginimpl.sprite.listener.LayerChangedEvent;
import com.soyostar.pluginimpl.sprite.model.Action;
import com.soyostar.pluginimpl.sprite.model.ActionTableModel;
import com.soyostar.pluginimpl.sprite.model.Animation;
import com.soyostar.pluginimpl.sprite.model.Frame;
import com.soyostar.pluginimpl.sprite.model.FrameTableModel;
import com.soyostar.pluginimpl.sprite.model.Layer;
import com.soyostar.pluginimpl.sprite.model.LayerTableModel;
import com.soyostar.pluginimpl.sprite.model.ModuleLayer;
import com.soyostar.pluginimpl.sprite.model.Sequence;
import com.soyostar.pluginimpl.sprite.model.SequenceTableModel;
import com.soyostar.pluginimpl.sprite.model.TileSet;
import com.soyostar.project.Project;
import com.soyostar.util.Log;
import com.soyostar.util.UIUtil;
import java.awt.Font;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DragSource;
import java.awt.dnd.DropTarget;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author Administrator
 */
public class SpriteEditorFrame extends javax.swing.JFrame implements IPlugin, AnimationChangeListener, LayerChangeListener, FrameChangeListener, ActionChangeListener {

    /** Creates new form SpriteManagerDialog */
    public SpriteEditorFrame() {
        Proxy.getInstance().setMainDialog(this);
        initComponents();
        initialize();


    }

    private void initialize() {
        setLocationRelativeTo(null);
        setTitle(SoftInformation.chineseName + " "
            + SoftInformation.version + "."
            + SoftInformation.modifiedVersion);
        DragSource dragSource = DragSource.getDefaultDragSource();
        dragSource.createDefaultDragGestureRecognizer(tileSetEditPane, DnDConstants.ACTION_COPY_OR_MOVE, mema);
        DropTarget dropTarget = new DropTarget(frameEditPane, DnDConstants.ACTION_COPY, frameEditPane);
        DragSource dragSourceAction = DragSource.getDefaultDragSource();
        dragSourceAction.createDefaultDragGestureRecognizer(this.frameViewPane, DnDConstants.ACTION_COPY_OR_MOVE, this.frameViewPane);
        DropTarget dropTargetAction = new DropTarget(this.actionViewPane, DnDConstants.ACTION_COPY, this.actionViewPane);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        ToolBar = new javax.swing.JToolBar();
        newAniButton = new javax.swing.JButton();
        openAniButton = new javax.swing.JButton();
        saveAniButton = new javax.swing.JButton();
        leftSideToolBar = new javax.swing.JToolBar(javax.swing.JToolBar.VERTICAL);
        tileSetZoomInButton = new javax.swing.JButton();
        tileSetZoomOutButton = new javax.swing.JButton();
        penToggleButton = new javax.swing.JToggleButton();
        eraserToggleButton = new javax.swing.JToggleButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane5 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        tileSetEditPane = new com.soyostar.pluginimpl.sprite.widge.TileSetEditPane();
        jPanel5 = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane4 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        addlayerButton = new javax.swing.JButton();
        removeLayerButton = new javax.swing.JButton();
        upLayerButton = new javax.swing.JButton();
        downLayerButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jScrollPane3 = new javax.swing.JScrollPane();
        layerTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        frameEditPane = new com.soyostar.pluginimpl.sprite.widge.FrameEditPane();
        jPanel7 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        addFrameButton = new javax.swing.JButton();
        removeFrameButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        frameTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        imageToolBar = new javax.swing.JToolBar(javax.swing.JToolBar.VERTICAL);
        addImageButton = new javax.swing.JButton();
        removeImageButton = new javax.swing.JButton();
        imagePropertyButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tileSetViewPane = new com.soyostar.pluginimpl.sprite.widge.TileSetViewPane();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel9 = new javax.swing.JPanel();
        jSplitPane6 = new javax.swing.JSplitPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        sequenceTable = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jSplitPane7 = new javax.swing.JSplitPane();
        jPanel13 = new javax.swing.JPanel();
        actionViewPane = new com.soyostar.pluginimpl.sprite.widge.ActionViewPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        actionTable = new javax.swing.JTable();
        jToolBar3 = new javax.swing.JToolBar();
        addActionButton = new javax.swing.JButton();
        removeActionButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        frameViewPane = new com.soyostar.pluginimpl.sprite.widge.FrameViewPane();
        MenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newAniMenuItem = new javax.swing.JMenuItem();
        openAniMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        setMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(SpriteEditorFrame.class);
        setTitle(resourceMap.getString("title")); // NOI18N

        ToolBar.setFloatable(false);
        ToolBar.setRollover(true);
        ToolBar.setName("工具栏"); // NOI18N

        newAniButton.setText("新建动画");
        newAniButton.setFocusable(false);
        newAniButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newAniButton.setName("newAniButton"); // NOI18N
        newAniButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newAniButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAniButtonActionPerformed(evt);
            }
        });
        ToolBar.add(newAniButton);

        openAniButton.setText("打开动画");
        openAniButton.setFocusable(false);
        openAniButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openAniButton.setName("openAniButton"); // NOI18N
        openAniButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ToolBar.add(openAniButton);

        saveAniButton.setText("保存动画");
        saveAniButton.setFocusable(false);
        saveAniButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveAniButton.setName("saveAniButton"); // NOI18N
        saveAniButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ToolBar.add(saveAniButton);

        leftSideToolBar.setFloatable(false);
        leftSideToolBar.setRollover(true);
        leftSideToolBar.setName("leftSideToolBar"); // NOI18N

        tileSetZoomInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/coor.png"))); // NOI18N
        tileSetZoomInButton.setToolTipText("放大");
        tileSetZoomInButton.setFocusable(false);
        tileSetZoomInButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tileSetZoomInButton.setName("tileSetZoomInButton"); // NOI18N
        tileSetZoomInButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tileSetZoomInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileSetZoomInButtonActionPerformed(evt);
            }
        });
        leftSideToolBar.add(tileSetZoomInButton);

        tileSetZoomOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gimp-tool-bucket-fill-22.png"))); // NOI18N
        tileSetZoomOutButton.setToolTipText("缩小");
        tileSetZoomOutButton.setFocusable(false);
        tileSetZoomOutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tileSetZoomOutButton.setName("tileSetZoomOutButton"); // NOI18N
        tileSetZoomOutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tileSetZoomOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileSetZoomOutButtonActionPerformed(evt);
            }
        });
        leftSideToolBar.add(tileSetZoomOutButton);

        buttonGroup1.add(penToggleButton);
        penToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gimp-tool-rect-select-22.png"))); // NOI18N
        penToggleButton.setSelected(true);
        penToggleButton.setFocusable(false);
        penToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        penToggleButton.setName("penToggleButton"); // NOI18N
        penToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        penToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                penToggleButtonActionPerformed(evt);
            }
        });
        leftSideToolBar.add(penToggleButton);

        buttonGroup1.add(eraserToggleButton);
        eraserToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gimp-tool-eraser-22.png"))); // NOI18N
        eraserToggleButton.setFocusable(false);
        eraserToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eraserToggleButton.setName("eraserToggleButton"); // NOI18N
        eraserToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eraserToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraserToggleButtonActionPerformed(evt);
            }
        });
        leftSideToolBar.add(eraserToggleButton);

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jSplitPane5.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane5.setResizeWeight(0.8);
        jSplitPane5.setName("jSplitPane5"); // NOI18N
        jSplitPane5.setOneTouchExpandable(true);

        jSplitPane2.setResizeWeight(0.5);
        jSplitPane2.setName("jSplitPane2"); // NOI18N
        jSplitPane2.setOneTouchExpandable(true);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        mema = new TileSetEditMouseAdapter(tileSetEditPane);
        tileSetEditPane.setName("tileSetEditPane"); // NOI18N
        tileSetEditPane.addMouseListener(mema);
        tileSetEditPane.addMouseMotionListener(mema);

        javax.swing.GroupLayout tileSetEditPaneLayout = new javax.swing.GroupLayout(tileSetEditPane);
        tileSetEditPane.setLayout(tileSetEditPaneLayout);
        tileSetEditPaneLayout.setHorizontalGroup(
            tileSetEditPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 292, Short.MAX_VALUE)
        );
        tileSetEditPaneLayout.setVerticalGroup(
            tileSetEditPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tileSetEditPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tileSetEditPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel2);

        jSplitPane2.setLeftComponent(jScrollPane1);

        jPanel5.setName("jPanel5"); // NOI18N

        jSplitPane3.setResizeWeight(0.7);
        jSplitPane3.setName("jSplitPane3"); // NOI18N
        jSplitPane3.setOneTouchExpandable(true);

        jSplitPane4.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane4.setResizeWeight(0.9);
        jSplitPane4.setName("jSplitPane4"); // NOI18N
        jSplitPane4.setOneTouchExpandable(true);

        jPanel6.setName("jPanel6"); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        addlayerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-new.png"))); // NOI18N
        addlayerButton.setFocusable(false);
        addlayerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addlayerButton.setName("addlayerButton"); // NOI18N
        addlayerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addlayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addlayerButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addlayerButton);

        removeLayerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-delete.png"))); // NOI18N
        removeLayerButton.setFocusable(false);
        removeLayerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeLayerButton.setName("removeLayerButton"); // NOI18N
        removeLayerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeLayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeLayerButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(removeLayerButton);

        upLayerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-up.png"))); // NOI18N
        upLayerButton.setFocusable(false);
        upLayerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        upLayerButton.setName("upLayerButton"); // NOI18N
        upLayerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        upLayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upLayerButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(upLayerButton);

        downLayerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-down.png"))); // NOI18N
        downLayerButton.setFocusable(false);
        downLayerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        downLayerButton.setName("downLayerButton"); // NOI18N
        downLayerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        downLayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downLayerButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(downLayerButton);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        layerTable.setModel(ltm);
        layerTable.setName("layerTable"); // NOI18N
        layerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                layerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(layerTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
        );

        jSplitPane4.setBottomComponent(jPanel6);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        jPanel8.setName("jPanel8"); // NOI18N

        fema = new FrameEditMouseAdapter(frameEditPane);
        frameEditPane.setName("frameEditPane"); // NOI18N
        frameEditPane.addMouseListener(fema);
        frameEditPane.addMouseMotionListener(fema);

        javax.swing.GroupLayout frameEditPaneLayout = new javax.swing.GroupLayout(frameEditPane);
        frameEditPane.setLayout(frameEditPaneLayout);
        frameEditPaneLayout.setHorizontalGroup(
            frameEditPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );
        frameEditPaneLayout.setVerticalGroup(
            frameEditPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameEditPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameEditPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane5.setViewportView(jPanel8);

        jSplitPane4.setLeftComponent(jScrollPane5);

        jSplitPane3.setLeftComponent(jSplitPane4);

        jPanel7.setName("jPanel7"); // NOI18N

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.setName("jToolBar2"); // NOI18N

        addFrameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-new.png"))); // NOI18N
        addFrameButton.setFocusable(false);
        addFrameButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addFrameButton.setName("addFrameButton"); // NOI18N
        addFrameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFrameButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(addFrameButton);

        removeFrameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-delete.png"))); // NOI18N
        removeFrameButton.setFocusable(false);
        removeFrameButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeFrameButton.setName("removeFrameButton"); // NOI18N
        removeFrameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFrameButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(removeFrameButton);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        frameTable.setModel(ftm);
        frameTable.setName("frameTable"); // NOI18N
        frameTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frameTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(frameTable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
        );

        jSplitPane3.setRightComponent(jPanel7);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );

        jSplitPane2.setRightComponent(jPanel5);

        jSplitPane5.setLeftComponent(jSplitPane2);

        jPanel4.setName("jPanel4"); // NOI18N

        imageToolBar.setFloatable(false);
        imageToolBar.setRollover(true);
        imageToolBar.setName("imageToolBar"); // NOI18N

        addImageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-new.png"))); // NOI18N
        addImageButton.setFocusable(false);
        addImageButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addImageButton.setName("addImageButton"); // NOI18N
        addImageButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageButtonActionPerformed(evt);
            }
        });
        imageToolBar.add(addImageButton);

        removeImageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-delete.png"))); // NOI18N
        removeImageButton.setFocusable(false);
        removeImageButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeImageButton.setName("removeImageButton"); // NOI18N
        removeImageButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeImageButtonActionPerformed(evt);
            }
        });
        imageToolBar.add(removeImageButton);

        imagePropertyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gtk-edit.png"))); // NOI18N
        imagePropertyButton.setFocusable(false);
        imagePropertyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imagePropertyButton.setName("imagePropertyButton"); // NOI18N
        imagePropertyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imagePropertyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagePropertyButtonActionPerformed(evt);
            }
        });
        imageToolBar.add(imagePropertyButton);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tileSetViewPane.setName("tileSetViewPane"); // NOI18N
        tileSetViewPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tileSetViewPaneMousePressed(evt);
            }
        });

        javax.swing.GroupLayout tileSetViewPaneLayout = new javax.swing.GroupLayout(tileSetViewPane);
        tileSetViewPane.setLayout(tileSetViewPaneLayout);
        tileSetViewPaneLayout.setHorizontalGroup(
            tileSetViewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 979, Short.MAX_VALUE)
        );
        tileSetViewPaneLayout.setVerticalGroup(
            tileSetViewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 144, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(tileSetViewPane);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(imageToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 998, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
        );

        jSplitPane5.setRightComponent(jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1041, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("帧处理", jPanel1);

        jPanel3.setName("jPanel3"); // NOI18N

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.7);
        jSplitPane1.setName("jSplitPane1"); // NOI18N
        jSplitPane1.setOneTouchExpandable(true);

        jPanel9.setName("jPanel9"); // NOI18N

        jSplitPane6.setResizeWeight(0.3);
        jSplitPane6.setName("jSplitPane6"); // NOI18N

        jPanel11.setName("jPanel11"); // NOI18N

        jScrollPane9.setName("jScrollPane9"); // NOI18N

        sequenceTable.setModel(stm);
        sequenceTable.setName("sequenceTable"); // NOI18N
        sequenceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sequenceTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(sequenceTable);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
        );

        jSplitPane6.setLeftComponent(jPanel11);

        jPanel12.setName("jPanel12"); // NOI18N

        jSplitPane7.setResizeWeight(0.7);
        jSplitPane7.setName("jSplitPane7"); // NOI18N

        jPanel13.setName("jPanel13"); // NOI18N

        actionViewPane.setName("actionViewPane"); // NOI18N

        javax.swing.GroupLayout actionViewPaneLayout = new javax.swing.GroupLayout(actionViewPane);
        actionViewPane.setLayout(actionViewPaneLayout);
        actionViewPaneLayout.setHorizontalGroup(
            actionViewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );
        actionViewPaneLayout.setVerticalGroup(
            actionViewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 423, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionViewPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionViewPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jSplitPane7.setLeftComponent(jPanel13);

        jPanel14.setName("jPanel14"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        actionTable.setModel(atm);
        actionTable.setName("actionTable"); // NOI18N
        actionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actionTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(actionTable);

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);
        jToolBar3.setName("jToolBar3"); // NOI18N

        addActionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-new.png"))); // NOI18N
        addActionButton.setFocusable(false);
        addActionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addActionButton.setName("addActionButton"); // NOI18N
        addActionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addActionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionButtonActionPerformed(evt);
            }
        });
        jToolBar3.add(addActionButton);

        removeActionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soyostar/pluginimpl/sprite/resources/gnome-delete.png"))); // NOI18N
        removeActionButton.setFocusable(false);
        removeActionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeActionButton.setName("removeActionButton"); // NOI18N
        removeActionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar3.add(removeActionButton);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
            .addComponent(jScrollPane8, 0, 0, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
        );

        jSplitPane7.setRightComponent(jPanel14);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
        );

        jSplitPane6.setRightComponent(jPanel12);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );

        jSplitPane1.setTopComponent(jPanel9);

        jPanel10.setName("jPanel10"); // NOI18N

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        frameViewPane.setName("frameViewPane"); // NOI18N
        frameViewPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                frameViewPaneMousePressed(evt);
            }
        });

        javax.swing.GroupLayout frameViewPaneLayout = new javax.swing.GroupLayout(frameViewPane);
        frameViewPane.setLayout(frameViewPaneLayout);
        frameViewPaneLayout.setHorizontalGroup(
            frameViewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1037, Short.MAX_VALUE)
        );
        frameViewPaneLayout.setVerticalGroup(
            frameViewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 162, Short.MAX_VALUE)
        );

        jScrollPane6.setViewportView(frameViewPane);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel10);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("动作处理", jPanel3);

        MenuBar.setName("MenuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        newAniMenuItem.setText(resourceMap.getString("newAniMenuItem.text")); // NOI18N
        newAniMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAniMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newAniMenuItem);

        openAniMenuItem.setText(resourceMap.getString("openAniMenuItem.text")); // NOI18N
        openAniMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openAniMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openAniMenuItem);

        saveMenuItem.setText(resourceMap.getString("saveMenuItem.text")); // NOI18N
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        MenuBar.add(fileMenu);

        editMenu.setText(resourceMap.getString("editMenu.text")); // NOI18N
        editMenu.setName("editMenu"); // NOI18N
        MenuBar.add(editMenu);

        setMenu.setText(resourceMap.getString("setMenu.text")); // NOI18N
        MenuBar.add(setMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        helpMenuItem.setText(resourceMap.getString("helpMenuItem.text")); // NOI18N
        helpMenuItem.setName("helpMenuItem"); // NOI18N
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpMenuItem);

        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        MenuBar.add(helpMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftSideToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(leftSideToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void helpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemActionPerformed
        // TODO add your handling code here:
        HelpDialog hd = new HelpDialog(this, true);
        hd.setVisible(true);
    }//GEN-LAST:event_helpMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
        AboutDialog hd = new AboutDialog(this, true);
        hd.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void newAniMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAniMenuItemActionPerformed
        // TODO add your handling code here:
        newAni();
    }//GEN-LAST:event_newAniMenuItemActionPerformed

    private void openAniMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openAniMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openAniMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed
    private void newAni() {
        NewAnimationDialog nad = new NewAnimationDialog(this, true);
        nad.setVisible(true);
    }
    private void newAniButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAniButtonActionPerformed
        // TODO add your handling code here:
        newAni();
    }//GEN-LAST:event_newAniButtonActionPerformed

    private void addImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageButtonActionPerformed
        // TODO add your handling code here:
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        JFileChooser jf = new JFileChooser();
        jf.setCurrentDirectory(new File(Project.getInstance().getPath() + "\\image\\animation"));
        int fresult;
        fresult = jf.showOpenDialog(this);
        if (fresult == JFileChooser.APPROVE_OPTION) { // 用户点击了“确定”按钮
            File file = jf.getSelectedFile();
            try {
                BufferedImage img = ImageIO.read(file);
                TileSet tileset = new TileSet();
                tileset.setTileSetImage(img);
                tileset.setTilebmpFile(file.getPath());
                tileset.setName(file.getName());
                Animation.getInstance().addTileSet(tileset);

            } catch (Exception e) {
//                e.printStackTrace();
                System.out.println("读取Image对象异常！");
            }
        }
    }//GEN-LAST:event_addImageButtonActionPerformed

    private void tileSetViewPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tileSetViewPaneMousePressed
        // TODO add your handling code here:
        tileSetViewPane.setSelectedTileSet(evt.getX(), evt.getY());
        tileSetEditPane.setTileSet(tileSetViewPane.getSelectedTileSet());
    }//GEN-LAST:event_tileSetViewPaneMousePressed

    private void removeImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeImageButtonActionPerformed
        // TODO add your handling code here:
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        Animation.getInstance().removeTileSet(tileSetViewPane.getSelectedTileSet());
    }//GEN-LAST:event_removeImageButtonActionPerformed

    private void tileSetZoomInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileSetZoomInButtonActionPerformed
        // TODO add your handling code here:
        tileSetEditPane.zoomUp();
    }//GEN-LAST:event_tileSetZoomInButtonActionPerformed

    private void tileSetZoomOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileSetZoomOutButtonActionPerformed
        // TODO add your handling code here:
        tileSetEditPane.zoomDown();
    }//GEN-LAST:event_tileSetZoomOutButtonActionPerformed

    private void addFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFrameButtonActionPerformed
        // TODO add your handling code here:
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        Frame frame = new Frame();
        frame.addFrameChangeListener(this);
        frame.setName("新建帧");

        Layer layer = new ModuleLayer();
        layer.addLayerChangeListener(this);
        layer.setName("新建层");
        frame.addLayer(layer);
        Animation.getInstance().addFrame(frame);
        addFrame();
    }//GEN-LAST:event_addFrameButtonActionPerformed
    public void addFrame() {
        layerTable.getSelectionModel().setSelectionInterval(0, 0);
        frameTable.getSelectionModel().setSelectionInterval(Animation.getInstance().getFramesCount() - 1,
            Animation.getInstance().getFramesCount() - 1);
        currentFrameIndex = Animation.getInstance().getFramesCount() - 1;
        currentLayerIndex = 0;
        frameEditPane.setFrame(Animation.getInstance().getFrame(currentFrameIndex));
        layerTable.updateUI();
    }
    private void frameTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameTableMouseClicked
        // TODO add your handling code here:
//        System.out.println("frame row:" + frameTable.getSelectedRow());
        layerTable.getSelectionModel().setSelectionInterval(0, 0);
        currentFrameIndex = frameTable.getSelectedRow();
        currentLayerIndex = 0;
        frameEditPane.setFrame(Animation.getInstance().getFrame(currentFrameIndex));
        layerTable.updateUI();
    }//GEN-LAST:event_frameTableMouseClicked

    private void layerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layerTableMouseClicked
        // TODO add your handling code here:
//        System.out.println("layer row:" + layerTable.getSelectedRow());
        currentLayerIndex = layerTable.getSelectedRow();
        frameEditPane.setSelectedIndex(-1);
    }//GEN-LAST:event_layerTableMouseClicked

    private void addlayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addlayerButtonActionPerformed
        // TODO add your handling code here:
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (currentFrameIndex == -1) {
            JOptionPane.showMessageDialog(this, "当前帧不能为空！", "警告", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Layer layer = new ModuleLayer();
        layer.addLayerChangeListener(this);
        layer.setName("新建层");

        Animation.getInstance().getFrame(currentFrameIndex).addLayer(layer);
        layerTable.getSelectionModel().setSelectionInterval(Animation.getInstance().getFrame(currentFrameIndex).getLayersCount() - 1,
            Animation.getInstance().getFrame(currentFrameIndex).getLayersCount() - 1);
        currentLayerIndex = Animation.getInstance().getFrame(currentFrameIndex).getLayersCount() - 1;
        frameEditPane.setSelectedIndex(-1);
        layerTable.updateUI();
    }//GEN-LAST:event_addlayerButtonActionPerformed

    private void imagePropertyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagePropertyButtonActionPerformed
        // TODO add your handling code here:
        TileSetInformationDialog tsid = new TileSetInformationDialog(this, true);
        if (tileSetViewPane.getSelectedTileSet() != null) {
            tsid.imageNameLabel.setText(tileSetViewPane.getSelectedTileSet().getName());
            tsid.imagePathLabel.setText(tileSetViewPane.getSelectedTileSet().getTilebmpFile());
            tsid.imageSizeLabel.setText(tileSetViewPane.getSelectedTileSet().getTileSetImage().getWidth() + "x" + tileSetViewPane.getSelectedTileSet().getTileSetImage().getHeight());
            tsid.imageCapacityLabel.setText(new File(tileSetViewPane.getSelectedTileSet().getTilebmpFile()).length() + "字节");
        }
        tsid.setVisible(true);
    }//GEN-LAST:event_imagePropertyButtonActionPerformed
    private void removeLayer() {
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (currentFrameIndex == -1) {
            JOptionPane.showMessageDialog(this, "当前帧不能为空！", "警告", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (Animation.getInstance().getFrame(currentFrameIndex).getLayersCount() > 1) {
            Layer layer = Animation.getInstance().getFrame(currentFrameIndex).getLayer(currentLayerIndex);
            layer.removeLayerChangeListener(this);
            Animation.getInstance().getFrame(currentFrameIndex).removeLayer(layer);
        } else {
            JOptionPane.showMessageDialog(this,
                "至少应有一个瓷砖层！");
        }

    }
    private void removeLayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeLayerButtonActionPerformed
        // TODO add your handling code here:
        removeLayer();
    }//GEN-LAST:event_removeLayerButtonActionPerformed
    private void upLayer() {
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (currentFrameIndex == -1) {
            JOptionPane.showMessageDialog(this, "当前帧不能为空！", "警告", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (currentLayerIndex > 0) {
            Animation.getInstance().getFrame(currentFrameIndex).swapLayerUp(currentLayerIndex);

            currentLayerIndex--;
            layerTable.getSelectionModel().setSelectionInterval(currentLayerIndex,
                currentLayerIndex);
            layerTable.updateUI();
            frameEditPane.updateUI();
        }
    }
    private void upLayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upLayerButtonActionPerformed
        // TODO add your handling code here:
        upLayer();
    }//GEN-LAST:event_upLayerButtonActionPerformed
    private void downLayer() {
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (currentFrameIndex == -1) {
            JOptionPane.showMessageDialog(this, "当前帧不能为空！", "警告", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int totalLayers = Animation.getInstance().getFrame(currentFrameIndex).getLayersCount();
        if (currentLayerIndex < totalLayers - 1) {
            Animation.getInstance().getFrame(currentFrameIndex).swapLayerDown(currentLayerIndex);
            currentLayerIndex++;
            layerTable.getSelectionModel().setSelectionInterval(currentLayerIndex,
                currentLayerIndex);
            layerTable.updateUI();
            frameEditPane.updateUI();
        }

    }
    private void downLayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downLayerButtonActionPerformed
        // TODO add your handling code here:
        downLayer();
    }//GEN-LAST:event_downLayerButtonActionPerformed

    private void removeFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFrameButtonActionPerformed
        // TODO add your handling code here:
        if (Animation.getInstance().getType() == -1) {
            JOptionPane.showMessageDialog(this, "新先新建动画！", "警告",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (currentFrameIndex == -1) {
            JOptionPane.showMessageDialog(this, "当前帧不能为空！", "警告", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int id = JOptionPane.showConfirmDialog(this, "你确定要删除该帧吗？", "删除帧", JOptionPane.OK_CANCEL_OPTION);
        if (id == JOptionPane.OK_OPTION) {
            Frame frame = Animation.getInstance().getFrame(currentFrameIndex);
            frame.removeFrameChangeListener(this);
            currentFrameIndex = -1;
            Animation.getInstance().removeFrame(frame);

        }


    }//GEN-LAST:event_removeFrameButtonActionPerformed

    private void penToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_penToggleButtonActionPerformed
        // TODO add your handling code here:
        Proxy.getInstance().setOpType(Proxy.PEN);
        tileSetEditPane.setSelectedIndex(-1);
    }//GEN-LAST:event_penToggleButtonActionPerformed

    private void eraserToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraserToggleButtonActionPerformed
        // TODO add your handling code here:
        Proxy.getInstance().setOpType(Proxy.ERASER);
        tileSetEditPane.setSelectedIndex(-1);
    }//GEN-LAST:event_eraserToggleButtonActionPerformed

    private void frameViewPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameViewPaneMousePressed
        // TODO add your handling code here:
        frameViewPane.setSelectedFrame(evt.getX(), evt.getY());
    }//GEN-LAST:event_frameViewPaneMousePressed

    private void addActionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionButtonActionPerformed
        // TODO add your handling code here:
        Action act = new Action();
        act.setName("新建动作");
        act.addActionChangeListener(this);
        Animation.getInstance().addAction(act);
        addAction();
    }//GEN-LAST:event_addActionButtonActionPerformed

    private void actionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionTableMouseClicked
        // TODO add your handling code here:
        currentActionIndex = actionTable.getSelectedRow();
        actionViewPane.setAction(Animation.getInstance().getAction(currentActionIndex));
        sequenceTable.updateUI();
        currentSequenceIndex = -1;
        actionViewPane.setSequenceIndex(currentSequenceIndex);
        sequenceTable.getSelectionModel().clearSelection();
    }//GEN-LAST:event_actionTableMouseClicked

    private void sequenceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sequenceTableMouseClicked
        // TODO add your handling code here:
        currentSequenceIndex = sequenceTable.getSelectedRow();
        actionViewPane.setSequenceIndex(currentSequenceIndex);
    }//GEN-LAST:event_sequenceTableMouseClicked
    public void addAction() {
        actionTable.getSelectionModel().setSelectionInterval(Animation.getInstance().getActionsCount() - 1,
            Animation.getInstance().getActionsCount() - 1);
        currentActionIndex = Animation.getInstance().getActionsCount() - 1;
        actionViewPane.setAction(Animation.getInstance().getAction(currentActionIndex));
        currentSequenceIndex = -1;
        actionViewPane.setSequenceIndex(currentSequenceIndex);
        sequenceTable.getSelectionModel().clearSelection();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        JDialog.setDefaultLookAndFeelDecorated(true);
        JFrame.setDefaultLookAndFeelDecorated(true);
        UIUtil.InitGlobalFont(new Font("微软雅黑", Font.PLAIN, 13));//全局字体设置
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SpriteEditorFrame smd = new SpriteEditorFrame();
                try {
                    UIManager.setLookAndFeel("org.pushingpixels.substance.api.skin.SubstanceMarinerLookAndFeel");
                    SwingUtilities.updateComponentTreeUI(smd);//更新控件的外观
                } catch (Exception e) {
                    Log.getLogger(this.getClass()).error("error-LAF", e);
                }
                smd.setVisible(true);
            }
        });
    }
    private int currentActionIndex = -1;

    public int getCurrentActionIndex() {
        return currentActionIndex;
    }

    public void setCurrentActionIndex(int currentActionIndex) {
        this.currentActionIndex = currentActionIndex;
    }
    private int currentSequenceIndex = -1;

    public int getCurrentSequenceIndex() {
        return currentSequenceIndex;
    }

    public void setCurrentSequenceIndex(int currentSequenceIndex) {
        this.currentSequenceIndex = currentSequenceIndex;
    }
    private int currentFrameIndex = -1;

    public void setCurrentFrameIndex(int currentFrameIndex) {
        this.currentFrameIndex = currentFrameIndex;
    }

    public void setCurrentLayerIndex(int currentLayerIndex) {
        this.currentLayerIndex = currentLayerIndex;
    }
    private int currentLayerIndex = -1;

    public int getCurrentFrameIndex() {
        return currentFrameIndex;
    }

    public int getCurrentLayerIndex() {
        return currentLayerIndex;
    }
    private TileSetEditMouseAdapter mema;
    private FrameEditMouseAdapter fema;
    private ActionTableModel atm = new ActionTableModel();
    private SequenceTableModel stm = new SequenceTableModel();
    private FrameTableModel ftm = new FrameTableModel();
    private LayerTableModel ltm = new LayerTableModel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JTable actionTable;
    private com.soyostar.pluginimpl.sprite.widge.ActionViewPane actionViewPane;
    private javax.swing.JButton addActionButton;
    private javax.swing.JButton addFrameButton;
    private javax.swing.JButton addImageButton;
    private javax.swing.JButton addlayerButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton downLayerButton;
    private javax.swing.JMenu editMenu;
    private javax.swing.JToggleButton eraserToggleButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private com.soyostar.pluginimpl.sprite.widge.FrameEditPane frameEditPane;
    public javax.swing.JTable frameTable;
    private com.soyostar.pluginimpl.sprite.widge.FrameViewPane frameViewPane;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JButton imagePropertyButton;
    private javax.swing.JToolBar imageToolBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JSplitPane jSplitPane5;
    private javax.swing.JSplitPane jSplitPane6;
    private javax.swing.JSplitPane jSplitPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    public javax.swing.JTable layerTable;
    private javax.swing.JToolBar leftSideToolBar;
    private javax.swing.JButton newAniButton;
    private javax.swing.JMenuItem newAniMenuItem;
    private javax.swing.JButton openAniButton;
    private javax.swing.JMenuItem openAniMenuItem;
    private javax.swing.JToggleButton penToggleButton;
    private javax.swing.JButton removeActionButton;
    private javax.swing.JButton removeFrameButton;
    private javax.swing.JButton removeImageButton;
    private javax.swing.JButton removeLayerButton;
    private javax.swing.JButton saveAniButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTable sequenceTable;
    private javax.swing.JMenu setMenu;
    private com.soyostar.pluginimpl.sprite.widge.TileSetEditPane tileSetEditPane;
    private com.soyostar.pluginimpl.sprite.widge.TileSetViewPane tileSetViewPane;
    private javax.swing.JButton tileSetZoomInButton;
    private javax.swing.JButton tileSetZoomOutButton;
    private javax.swing.JButton upLayerButton;
    // End of variables declaration//GEN-END:variables
    private SpriteEditorFrame smd;

    public void start() {
        if (smd == null) {
            smd = new SpriteEditorFrame();
        }
        smd.setVisible(true);
    }

    public void animationChanged(AnimationChangedEvent e) {
        this.setTitle(SoftInformation.chineseName + " - " + e.getAnimation().getName());
    }

    public void actionAdded(AnimationChangedEvent e, Action action) {
        actionTable.updateUI();
        sequenceTable.updateUI();
    }

    public void actionRemoved(AnimationChangedEvent e, int index) {
        actionTable.updateUI();
        sequenceTable.updateUI();
    }

    public void tileSetAdded(AnimationChangedEvent e, TileSet tileset) {
        tileSetViewPane.updateUI();
        tileSetEditPane.updateUI();
    }

    public void tileSetRemoved(AnimationChangedEvent e, int index) {
        tileSetViewPane.setSelectedIndex(-1);
        tileSetEditPane.setTileSet(null);
    }

    public void frameAdded(AnimationChangedEvent e, Frame frame) {
        frameTable.updateUI();
        layerTable.updateUI();
        frameEditPane.updateUI();
    }

    public void frameRemoved(AnimationChangedEvent e, int index) {
        frameTable.updateUI();
        layerTable.updateUI();
        frameEditPane.setFrame(null);
        frameEditPane.updateUI();
    }

    public void layerChanged(LayerChangedEvent event) {
        frameEditPane.updateUI();
        layerTable.updateUI();
    }

    public void visibleChanged(LayerChangedEvent event, boolean nowBool) {
        frameEditPane.updateUI();
    }

    public void nameChanged(LayerChangedEvent event, String oldName, String newName) {
        frameEditPane.updateUI();
    }

    public void frameChanged(FrameChangedEvent e) {
        frameEditPane.updateUI();
    }

    public void nameChanged(FrameChangedEvent e, String oname, String nname) {
    }

    public void layerAdded(FrameChangedEvent e, Layer layer) {
        layerTable.updateUI();
        frameEditPane.updateUI();
    }

    public void layerRemoved(FrameChangedEvent e, int index) {
        layerTable.updateUI();
        frameEditPane.updateUI();
    }

    public void actionChanged(ActionChangedEvent e) {
        actionViewPane.updateUI();
    }

    public void nameChanged(ActionChangedEvent e, String oname, String nname) {
    }

    public void sequenceAdded(ActionChangedEvent e, Sequence seq) {
        actionViewPane.updateUI();
        currentSequenceIndex = Animation.getInstance().getAction(currentActionIndex).getSequencesCount() - 1;
        actionViewPane.setSequenceIndex(currentSequenceIndex);
        sequenceTable.getSelectionModel().setSelectionInterval(Animation.getInstance().getAction(currentActionIndex).getSequencesCount() - 1,
            Animation.getInstance().getAction(currentActionIndex).getSequencesCount() - 1);
        sequenceTable.updateUI();
    }

    public void sequenceRemoved(ActionChangedEvent e, int index) {
        currentSequenceIndex = -1;
        actionViewPane.setSequenceIndex(currentSequenceIndex);
        sequenceTable.getSelectionModel().clearSelection();
        sequenceTable.updateUI();
    }
}
