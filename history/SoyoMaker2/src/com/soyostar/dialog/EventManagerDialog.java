/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EventManagerDialog.java
 *
 * Created on 2011-3-25, 22:44:42
 */
package com.soyostar.dialog;

import com.soyostar.proxy.SoftProxy;
import com.soyostar.model.map.SpriteLayer;
import com.soyostar.model.map.Npc;
import com.soyostar.model.map.NpcState;
import com.soyostar.widge.NpcStatePane;
import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Administrator
 */
public class EventManagerDialog extends javax.swing.JDialog {

    /** Creates new form EventManagerDialog
     * @param parent
     * @param modal  
     */
    public EventManagerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initialize();
    }

    private void initialize() {
        setLocationRelativeTo(null);
    }
    private Npc npc;

    /**
     * 
     * @return
     */
    public Npc getNpc() {
        return npc;
    }

    /**
     * 
     * @param npc
     */
    public void setNpc(Npc npc) {
        this.npc = npc;
//        System.out.println("setNpc:" + npc.getNpcStates().size());
        for (int i = 0; i < npc.getNpcStates().size(); i++) {
            NpcState state = npc.getNpcState(i);
            addNpcStatePane(state);
//            System.out.println("addNpcStatePane"+i);
        }
    }

    private void addNpcStatePane(NpcState state) {

        NpcStatePane statePane = new NpcStatePane(this);
        statePane.setNpcState(state);
        npcTabbedPane.add("" + (npcTabbedPane.getTabCount() + 1), statePane);
    }

    private void removeNpcStatePane() {
        if (npcTabbedPane.getTabCount() <= 1) {
            //至少需要一个tab页
            return;
        }
        npc.removeNpcState(npcTabbedPane.getSelectedIndex());
        npcTabbedPane.removeTabAt(npcTabbedPane.getSelectedIndex());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        okButton = new javax.swing.JButton();
        cancleButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        npcTabbedPane = new javax.swing.JTabbedPane();
        addNewNpcStateButton = new javax.swing.JButton();
        copyNpcStateButton = new javax.swing.JButton();
        removeNpcStateButton = new javax.swing.JButton();
        clearNpcStateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(EventManagerDialog.class);
        setTitle(resourceMap.getString("title")); // NOI18N
        setResizable(false);

        okButton.setText("确定");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancleButton.setText("取消");
        cancleButton.setName("cancleButton"); // NOI18N
        cancleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleButtonActionPerformed(evt);
            }
        });

        applyButton.setText("应用");
        applyButton.setName("applyButton"); // NOI18N
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        npcTabbedPane.setName("npcTabbedPane"); // NOI18N

        addNewNpcStateButton.setText("新建事件页");
        addNewNpcStateButton.setName("addNewNpcStateButton"); // NOI18N
        addNewNpcStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewNpcStateButtonActionPerformed(evt);
            }
        });

        copyNpcStateButton.setText("克隆事件页");
        copyNpcStateButton.setName("copyNpcStateButton"); // NOI18N
        copyNpcStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyNpcStateButtonActionPerformed(evt);
            }
        });

        removeNpcStateButton.setText("删除事件页");
        removeNpcStateButton.setName("removeNpcStateButton"); // NOI18N
        removeNpcStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNpcStateButtonActionPerformed(evt);
            }
        });

        clearNpcStateButton.setText("清空事件页");
        clearNpcStateButton.setName("clearNpcStateButton"); // NOI18N
        clearNpcStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearNpcStateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addNewNpcStateButton)
                        .addGap(18, 18, 18)
                        .addComponent(copyNpcStateButton)
                        .addGap(18, 18, 18)
                        .addComponent(removeNpcStateButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearNpcStateButton)
                        .addGap(142, 142, 142))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(cancleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(npcTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewNpcStateButton)
                    .addComponent(copyNpcStateButton)
                    .addComponent(removeNpcStateButton)
                    .addComponent(clearNpcStateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(npcTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyButton)
                    .addComponent(cancleButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private SoftProxy data = SoftProxy.getInstance();
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:

        if (data.getCurrentLayer() instanceof SpriteLayer) {
            SpriteLayer layer = (SpriteLayer) data.getCurrentLayer();
            SoftProxy.getInstance().getCurProject().addNpc(npc);//给npc分配一个全局id
            layer.setNpcAt(data.getCurrentMap().getMapRender().mousePressLocation.x, data.getCurrentMap().getMapRender().mousePressLocation.y, npc);
        }
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancleButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        // TODO add your handling code here:
//        if (data.getCurrentLayer() instanceof SpriteLayer) {
//            SpriteLayer layer = (SpriteLayer) data.getCurrentLayer();
//            SoftProxy.getInstance().getCurProject().addNpc(npc);//给npc分配一个全局id
//            layer.setNpcAt(data.getCurrentMap().getMapRender().mousePressLocation.x, data.getCurrentMap().getMapRender().mousePressLocation.y, npc);
//        }
    }//GEN-LAST:event_applyButtonActionPerformed
    private ScriptDialog sd;
    private void addNewNpcStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewNpcStateButtonActionPerformed
        // TODO add your handling code here:
        NpcState state = new NpcState();
        npc.addNpcState(state);
        addNpcStatePane(state);
    }//GEN-LAST:event_addNewNpcStateButtonActionPerformed

    private void copyNpcStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyNpcStateButtonActionPerformed
        // TODO add your handling code here:
        NpcState state;
        try {
            state = (NpcState) ((NpcStatePane) npcTabbedPane.getSelectedComponent()).getNpcState().clone();
            npc.addNpcState(state);
            addNpcStatePane(state);
        } catch (CloneNotSupportedException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_copyNpcStateButtonActionPerformed

    private void removeNpcStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNpcStateButtonActionPerformed
        // TODO add your handling code here:
        removeNpcStatePane();
    }//GEN-LAST:event_removeNpcStateButtonActionPerformed

    private void clearNpcStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearNpcStateButtonActionPerformed
        // TODO add your handling code here:
        if (npcTabbedPane.getSelectedComponent() instanceof NpcStatePane) {
            npc.removeNpcState(((NpcStatePane) npcTabbedPane.getSelectedComponent()).getNpcState());
            NpcState state = new NpcState();
            npc.addNpcState(state);
            ((NpcStatePane) npcTabbedPane.getSelectedComponent()).setNpcState(state);
        }
    }//GEN-LAST:event_clearNpcStateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                EventManagerDialog dialog = new EventManagerDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewNpcStateButton;
    private javax.swing.JButton applyButton;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancleButton;
    private javax.swing.JButton clearNpcStateButton;
    private javax.swing.JButton copyNpcStateButton;
    public javax.swing.JTabbedPane npcTabbedPane;
    private javax.swing.JButton okButton;
    private javax.swing.JButton removeNpcStateButton;
    // End of variables declaration//GEN-END:variables
}
