--[[
  description:动画
  author:wp_g4
  date:2012/04/29
--]]

--结构定义
clsAnimation={}
clsAnimation.__index = clsAnimation

--字段定义
clsAnimation.id=nil					--动画ID
clsAnimation.x=nil					--动画坐标
clsAnimation.y=nil					--动画坐标
clsAnimation.startTime=nil			--动画开始播放的时间

-- 构造
function clsAnimation:new(id,x,y)
  local self={}
  setmetatable(self,clsAnimation)
  self.id=id
  self.x=x
  self.y=y
  return self
end

--[[
  description:动画播放器
  author:wp_g4
  date:2012/04/29
--]]

AnimationPlayer={}

AnimationPlayer.animationList={}					--动画列表

--绑定供渲染的层
function AnimationPlayer:atachToLayer(layer)
  --重定向paintLayer方法
  layer.paintLayerF=layer.paintLayer
  function layer:paintLayer(painter)
    --调用原paintLayer方法
    self:paintLayerF(painter)
    if table.getn(AnimationPlayer.animationList)>0 then
    end
    --渲染动画
    local curTime=Game:getTime()
    for _,animation in pairs(AnimationPlayer.animationList) do
      local frameIndex=nil;
      if animation.startTime==nil then
        --动画未开始，则播放第一帧
        animation.startTime=curTime
        frameIndex=1
      else
        --动画已开始,判断应该播放的帧
        local frames=Dictionary.animations[animation.id].frames
        for i,frame in ipairs(frames) do
          if frame.startTime>=curTime-animation.startTime then
            frameIndex=i
            break
          end
        end
      end
      if frameIndex then
        --找到合适的帧,播放
        local frame=Dictionary.animations[animation.id].frames[frameIndex]
        for _,clip in ipairs(frame.clips) do
          local index=clip.index
          --计算坐标
          local x,y=animation.x+clip.x,animation.y+clip.y
          local clipDict=Dictionary.animationRes.clips[index]
          --绘制
          local path=Dictionary.animationRes.imagesets[clipDict.imageId].path
          painter:drawTexture(smTextureFactory:loadTexture(path),clipDict.x,clipDict.y,clipDict.width,clipDict.height,x,y,UIConst.anchor.HV)
        end
      else
        --未找到合适的帧，说明动画已经结束
        AnimationPlayer:stop(animation.id)
      end
    end
  end
end

--播放动画
function AnimationPlayer:play(id,x,y)
  self.animationList[id]=clsAnimation:new(id,x,y)
  --预加载图集
  local imageIds=Dictionary.animations[id].imageIds
  for _,imageId in ipairs(imageIds) do
    --加载动画图集
    local path=Dictionary.animationRes.imagesets[imageId].path
    Image:loadImage(path)
  end
end

--停止动画
function AnimationPlayer:stop(animationId)
  self.animationList[animationId]=nil
  --释放相应图集
end



