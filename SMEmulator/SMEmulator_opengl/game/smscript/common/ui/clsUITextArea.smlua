--[[
  description:按钮。
  author:wp_g4
  date:2011/04/21
--]]

--类结构定义
clsUITextArea={}
setmetatable(clsUITextArea,clsUILayer)
clsUITextArea.__index=clsUITextArea

--字段
clsUITextArea.REGEX="<.->%[.-%]"          			--功能正则表达式

clsUITextArea.text=nil                      		--标签文字
clsUITextArea.textColor="0xffffffff"      			--文字颜色
clsUITextArea.textSize=-1                   		--文字大小
clsUITextArea.gap=4									--间距
clsUITextArea.textItemList=nil						--多行文本数组

clsUITextArea.maxRowNum=1							--可显示的最大行数
clsUITextArea.curRowNum=0							--当前已经绘制的行数
clsUITextArea.rowIndex=1							--当前要显示的字符所在行下标
clsUITextArea.colIndex=1							--当前要显示的字符在它所在行的列下标
clsUITextArea.cursorX=0								--光标X坐标
clsUITextArea.cursorY=0								--光标Y坐标


--构造器
function clsUITextArea:new(x,y,width,height)
  local self = clsUILayer:new(x,y,width,height)
  setmetatable(self,clsUITextArea)
  return self
end

--更新TextArea
function clsUITextArea:refresh()
  if self.text==nil then
    return
  end
  self.textItemList=string.split(self.text,clsUITextArea.REGEX)
  --(1)重置位置标志
  self.rowIndex=1
  self.colIndex=1
  --(2)绘制
  self:drawPage()
end

--绘制
function clsUITextArea:drawPage()
  --(1)创建缓冲图
  self.image=Image:createImage(self.width,self.height)
  local painter=self.image:getPainter()
  --(2)设置属性
  painter:setColor(self.textColor)
  if self.textSize>0 then
    painter:setTextSize(self.textSize)
  end
  --(3)计算最大行数
  local textSize=painter:getTextSize()
  while self.maxRowNum*(textSize+self.gap)+self.gap<self.height do
    self.maxRowNum=self.maxRowNum+1
  end
  self.cursorX,self.cursorY=gap,gap
  self.curRowNum=0
  while self.rowIndex<=table.getn(self.textItemList) do
    local text=self.textItemList[self.rowIndex]  --取当前行文本
    if string.find(text,clsUITextArea.REGEX) then
      --功能字符串
      self:parseString(text,painter)
    else
      while self.colIndex<=smString:length(text) do
        local char=smString:subString(text,self.colIndex,self.colIndex)
        --(a)检查是否需要换行
        if self.cursorX+painter:stringWidth(char)>self.width-2*self.gap then
          self.cursorX=0
          self.cursorY=self.cursorY+textSize+self.gap
          self.curRowNum=self.curRowNum+1
        end
        --(b)检查是否超出边界(标志：已经绘制maxRowNum行文本)
        if self.curRowNum==self.maxRowNum then
          break
        else
          painter:drawString(char, self.cursorX, self.cursorY, UIConst.anchor.LT)
          self.cursorX=self.cursorX+painter:stringWidth(char)
        end
        self.colIndex=self.colIndex+1
      end
      if self.curRowNum==self.maxRowNum then
        break
      else
        self.colIndex=1
      end
    end
    self.rowIndex=self.rowIndex+1
  end
end

--解析功能字符串  <...>[...]
function clsUITextArea:parseString(text,painter)
  local items=string.split(text,">%[")
  local len=smString:length(items[1])
  local funStr=smString:subString(items[1],2,len)
  len=smString:length(items[3])
  local argStr=smString:subString(items[3],1,len-1)
  if funStr=="c" then
    painter:setColor(argStr)
  elseif funStr=="n" then
    local textSize=painter:getTextSize()
    self.cursorX=0
    for i=1,argStr do
      self.cursorY=self.cursorY+textSize+self.gap
      self.curRowNum=self.curRowNum+1
    end
  end
end

function clsUITextArea:nextPage()
  local hasNextPage=self.rowIndex<=table.getn(self.textItemList)
  if hasNextPage then
    self:drawPage()
  end
  return hasNextPage
end
