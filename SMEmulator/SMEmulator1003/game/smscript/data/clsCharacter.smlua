--[[
  description:角色类
  author:wp_g4
  date:2011/12/12
--]]

--结构定义
clsCharacter = {}
setmetatable(clsCharacter,clsModel)
clsCharacter.__index = clsCharacter

--重定向需要覆盖的父类方法
clsCharacter.updateF=clsCharacter.update

--常量定义
clsCharacter.STR="str"
clsCharacter.AGI="agi"
clsCharacter.INT="int"
clsCharacter.DEX="dex"
clsCharacter.VIT="vit"
clsCharacter.LUCK="luck"
clsCharacter.HP="HP"
clsCharacter.SP="SP"
clsCharacter.HRP="hpr"
clsCharacter.SPR="spr"
clsCharacter.ATK="atk"
clsCharacter.DEF="def"
clsCharacter.MATK="matk"
clsCharacter.MDEF="mdef"
clsCharacter.HIT="hit"
clsCharacter.FLEE="flee"
clsCharacter.ASPD="aspd"
clsCharacter.MSPD="mspd"
clsCharacter.CRI="cri"
clsCharacter.STA="sta"

--字段定义
clsCharacter.name="" --角色名称
clsCharacter.desc="" --角色描述
clsCharacter.headImageName=nil --头像名称
clsCharacter.headImage=nil --头像
clsCharacter.charImageName=nil --行走图名称
clsCharacter.charImage=nil --行走图
clsCharacter.battlerImageName=nil --战斗图名称
clsCharacter.battlerImage=nil --战斗图
clsCharacter.mapId=0 --角色当前所在地图ID
clsCharacter.row=0 --角色当前所在行号
clsCharacter.col=0 --角色当前所在列号
clsCharacter.face=0 --角色当前面向   0上  1下  2左  3右 
clsCharacter.step=0 --角色当前行走步数 取值范围[0,3]
clsCharacter.level=0 --等级
clsCharacter.hp=0 --HP值
clsCharacter.sp=0 --SP值
clsCharacter.exp=0 --经验值
clsCharacter.money=0 --金钱

clsCharacter.locked=false					--角色是否被锁定（被锁定的角色属性不更新，不接收普通行走命令）
clsCharacter.moveSequence=nil				--角色当前移动序列
clsCharacter.curMoveDirection=nil			--角色当前移动方向
clsCharacter.x=nil							--角色在屏幕上的x坐标
clsCharacter.y=nil							--角色在屏幕上的y坐标
clsCharacter.moveDelegate=nil     --行走事件委托 需要方法：
                                  --1、 “checkCellBeforeMove(character)”以检查指定单元格是否可以行走，是否有脚本要执行等
                                  --2、 “checkCellAfterMove(character)”以检查是否有事件要执行等
                   
clsCharacter.str=0 		--力量(基本值，不考虑装备和Buff的)
clsCharacter.agi=0 		--敏捷(基本值，不考虑装备和Buff的)
clsCharacter.int=0			--智力(基本值，不考虑装备和Buff的)
clsCharacter.vit=0 		--体力(基本值，不考虑装备和Buff的)
clsCharacter.dex=0 		--灵巧(基本值，不考虑装备和Buff的)
clsCharacter.luck=0 		--幸运(基本值，不考虑装备和Buff的)

--构造器
function clsCharacter:new()
	local self = clsModel:new()
	setmetatable(self,clsCharacter)
	self.moveSequence=clsQueue:new()
	return self
end

function clsCharacter:getProperty(name)
  --(1)取配置中的公式计算基本值
  function fun=loadstring(Dictionary.config.formulas[name])
  local value=fun()
  --(2)考虑装备
  --(3)考虑Buff
end

--攻击速度(math.min(agi,200))
function clsCharacter:atkSpeed()
  return math.min(self.agi,200)
end

--HP
function clsCharacter:HP()
  return math.floor(self.vit+math.pow((self.vit/3),2))
end

--更新[角色的基本更新] 
function clsCharacter:update()
  --调用父类的update方法
  self:updateF()
  --行走
  if self.curMoveDirection==nil and self.moveSequence:size()~=0 then
    self.curMoveDirection=self.moveSequence:poll()
    self.face=self.curMoveDirection
  end
  if self.curMoveDirection then
    self:move() 
  end
  --TODO 其它更新
end

--行走
function clsCharacter:move()
  --移动之前检查目标单元格是否可以移动
  if self.step==0 then
    --获取角色目的地
    local row,col=self:getHoldingCell()
    if self.moveDelegate then
      --检查目的地是否可以移动
      if not self.moveDelegate:checkCellBeforeMove(self) then
        --目的地不可达(停止所有移动)
        self.curMoveDirection=nil
        self.moveSequence:clear()
        return
      end
    end
  end
  --移动
  local direction=self.curMoveDirection
  local rowChanged=false
  self.step=self.step+1
  if self.step==4 then
    local row,col=self:getHoldingCell()
    if row~=self.row then
      rowChanged=true
    end
    self.row,self.col=row,col
    self.curMoveDirection=nil
    self.step=0
    --移动结束后检查角色所在地情况，以判断是否可以继续行走
    if self.moveDelegate then
      if not self.moveDelegate:checkCellAfterMove(self) then
        --不能继续行走(停止所有移动)
        self.moveSequence:clear()
        return
      end
    end
  end
  Notifier:notify(Const.NotifyCMD.Character.MOVED,{character=self,direction=direction,rowChanged=rowChanged})
end

--获取当前行走帧编号
function clsCharacter:getCurFrameIndex()
  local index=0
  if self.face==0 then
    --上
    index=12
  elseif self.face==1 then
    --下
    index=0
  elseif self.face==2 then
    --左
    index=4
  elseif self.face==3 then
    --右
    index=8
  end
  index=index+self.step
  return index
end

function clsCharacter:changeFace(face)
  self.face=face
  Notifier:notify(Const.NotifyCMD.Character.FACE_CHANGED,{character=self})
end

function clsCharacter:changeMap(mapId,row,col,face)
  self.mapId=mapId
  self.row=row
  self.col=col
  self.face=face
  self.curMoveDirection=nil
  self.moveSequence:clear()
  Notifier:notify(Const.NotifyCMD.Character.MAP_CHANGED,{character=self})
end

--获取character当前持有的单元格
function clsCharacter:getHoldingCell()
  if self.curMoveDirection then
    --移动中
    local row=self.row
    local col=self.col
    if self.curMoveDirection==0 then
      --上
      row=row-1
    elseif self.curMoveDirection==1 then
      --下
      row=row+1
    elseif self.curMoveDirection==2 then
      --左
      col=col-1
    elseif self.curMoveDirection==3 then
      --右
      col=col+1
    end
    return row,col
  else
    --静止
    return self.row,self.col
  end 
end