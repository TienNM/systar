--[[
  description:间隔动作。
  author:wp_g4
  date:2012/05/22
--]]

--结构定义
clsIntervalAction={}
setmetatable(clsIntervalAction,clsAction)
clsIntervalAction.__index = clsIntervalAction

--字段定义
clsIntervalAction.propertyTable=nil			--参数 属性所属的table 大多数情况此值等于target 这取决于构造中的可变参数
clsIntervalAction.propertyKey=nil			--参数 属性的key string或number
clsIntervalAction.values=nil				--参数 值表
clsIntervalAction.interval=nil				--参数 间隔
clsIntervalAction.arg=nil					--参数中的可变参数列表

-- 构造
function clsIntervalAction:new(values,interval,...)
  local self=clsAction:new()
  setmetatable(self,clsIntervalAction)
  self.values=values
  self.interval=interval
  self.arg=arg
  return self
end

--设置目标
function clsIntervalAction:onReset()
  --从可变参数中分离出propertyTable和propertyKey
  local n=table.getn(self.arg)
  --<1>最后一个是propertyKey
  self.propertyKey=self.arg[n]
  --<2>循环以确定propertyTable
  self.propertyTable=self.target
  for i,v in ipairs(self.arg) do
    if i<n then
      self.propertyTable=self.propertyTable[v]
    end
  end
  
  self.finished=false
end

--更新
function clsIntervalAction:onUpdate()
  --更新的属性
  if self.t0==nil then
    --尚未开始属性
    self.t0=Game:getinterval()
  end
  local delta=Game:getinterval()-self.t0
  local value=self.startValue+self.v0*delta+1/2*self.a*delta*delta
  local v=self.v0+self.a*delta
  if self.endValue-self.startValue>=0 then
    --增加
    if value>=self.endValue then
      self.propertyTable[self.propertyKey]=self.endValue
    else
      self.propertyTable[self.propertyKey]=value
    end
  else
    --减少
    if value<=self.endValue then
      self.propertyTable[self.propertyKey]=self.endValue
    else
      self.propertyTable[self.propertyKey]=value
    end
  end
  if self.propertyTable[self.propertyKey]==self.endValue then
    self.finished=true
    smLog:info("动作结束")
  end
end
