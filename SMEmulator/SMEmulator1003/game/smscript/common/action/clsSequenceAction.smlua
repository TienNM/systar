--[[
  description:序列动作(序列动作是一系列动作的集合，这些动作依次开始，只有所有动作都结束，序列动作才结束)
  author:wp_g4
  date:2012/05/12
--]]

--结构定义
clsSequenceAction={}
setmetatable(clsSequenceAction,clsAction)
clsSequenceAction.__index = clsSequenceAction

--字段定义
clsSequenceAction.actionList=nil				--序列动作的动作列表
clsSequenceAction.times=1						--序列动作的循环次数

clsSequenceAction.remnantTimes=nil				--剩余循环次数
clsSequenceAction.curIndex=nil					--当前应该运行的动作在列表中的下标

-- 构造
function clsSequenceAction:new(times,...)
  local self=clsAction:new()
  setmetatable(self,clsSequenceAction)
  self.times=times
  self.actionList=arg
  return self
end

--设置目标
function clsSequenceAction:onReset()
  for i,action in ipairs(self.actionList) do
    action.target=self.target
  end
  if self.times<0 then
    self.remnantTimes=99999999
  else
    self.remnantTimes=self.times
  end
  self.curIndex=nil
  self.finished=false
end

--更新
function clsSequenceAction:onUpdate()
  --(1)检查一次循环是否结束,标志是:当前动作是最后一个动作，并且动作结束
  local finished=(self.curIndex==table.getn(self.actionList) and self.actionList[self.curIndex].finished)
  if finished then
    --最后一个动作结束则判断是循环次数
    self.remnantTimes=self.remnantTimes-1
    if self.remnantTimes<=0 then
      --循环结束
      self.finished=finished
      return
    end
  end
  --(2)确定当前应该执行的动作
  if self.curIndex==nil then
    self.curIndex=1
    self.actionList[self.curIndex]:onReset()
  end
  if self.actionList[self.curIndex].finished then
    self.curIndex=math.mod(self.curIndex,table.getn(self.actionList))+1
    self.actionList[self.curIndex]:onReset()
  end
  self.actionList[self.curIndex]:onUpdate()
end
