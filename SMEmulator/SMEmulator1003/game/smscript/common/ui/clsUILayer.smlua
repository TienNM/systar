--[[
  description:层。所有组件的父类
  author:wp_g4
  date:2011/12/16
--]]

--类结构定义
clsUILayer={}
clsUILayer.__index=clsUILayer

--字段
clsUILayer.x=0                           	--x坐标
clsUILayer.y=0                        		--y坐标
clsUILayer.z=0                           	--z坐标
clsUILayer.width=0                      	--宽度
clsUILayer.height=0                       	--高度
clsUILayer.color=nil               			--背景色
clsUILayer.alpha=1.0               			--透明度
clsUILayer.image = null;           			--图像

clsUILayer.tag=0                       		--标志（可选）
clsUILayer.visibility = true;             	--是否可见
clsUILayer.enabled = true;                 	--是否接收事件
clsUILayer.delegate=nil                    	--事件委托

clsUILayer.parent=nil                   	--父layer
clsUILayer.children=nil                   	--子layer
clsUILayer.focusLayer=nil               	--当前事件焦点子layer

--构造器
function clsUILayer:new(x,y,width,height)
  local self = {}
  setmetatable(self,clsUILayer)
  self.x=x
  self.y=y
  self.width=width
  self.height=height
  self.children=clsList:new()
  return self
end

--添加子Layer
function clsUILayer:addChild(layer)
  self.children:add(layer)
  layer.parent=self
end

--子Layer排序
function clsUILayer:sortChildren()
  table.sort(self.children,function(a,b) return a.z < b.z end)
end

--根据序号获取子layer
function clsUILayer:getChild(index)
  return self.children:get(index)
end

--根据tag获取子layer
function clsUILayer:childWithTag(tag)
  local child=nil;
  for _,v in ipairs(self.children) do
    if v.tag==tag then
      child=v
    end
  end
  return child
end

--移除子Layer
function clsUILayer:remove(index)
  self:getChild(index).parent=nil
  self.children:remove(index)
end

--移除子Layer
function clsUILayer:removeChild(layer)
  layer.parent=nil
  self.children:removeObject(layer)
end

--移除所有子Layer
function clsUILayer:clear()
  for i=1,self.children:size() do
    self:getChild(i).parent=nil
  end
  self.children:clear()
end

--绘制Layer（lua层不应该调用此方法）
function clsUILayer:paint(painter)
  --绘制自身
  self:paintLayer(painter)
  --绘制子Layer
  self:paintChildren(painter)
end

--绘制自身（lua层不应该调用此方法）
function clsUILayer:paintLayer(painter)
  if self.color then
    painter:setColor(self.color);
    painter:fillRect(0, 0, self.width, self.height);
  end
  if self.image then
    painter:drawImage(self.image, 0, 0, 0);
  end
end

--绘制子Layer（lua层不应该调用此方法）
function clsUILayer:paintChildren(painter)
  for _,layer in ipairs(self.children) do
    if layer.visibility then
      --设置坐标系
      painter:setBasePoint(layer.x,layer.y)
      --绘制子Layer
      layer:paint(painter)
      --还原坐标系
      painter:setBasePoint(-layer.x,-layer.y)
    end
  end
      
end

--事件分发（lua层不应该调用此方法）
function clsUILayer:dispatchEvent(x,y,type)
  if type==UIConst.eventType.DOWN then
    --如果是DOWN事件，则从子组件中寻找焦点组件
    self.focusLayer = self:searchFocusLayer(x,y)
  end
  if self.focusLayer then
    --找到焦点组件
    self.focusLayer:dispatchEvent(x-self.focusLayer.x,y-self.focusLayer.y,type)
  else
    --未找到焦点组件
    self:onTouch(x,y,type)
  end
  if type==UIConst.eventType.UP then
    --如果是UP事件，则清除焦点
    self.focusLayer = nil
  end
end

--处理触屏事件（lua层不应该调用此方法）
function clsUILayer:onTouch(x,y,type)
  if self.delegate then
    self.delegate:layerTapped(self,x,y,type)
  end
end

--运行动作
function clsUILayer:runAction(action)
  action:setTarget(self)
  ActionPlayer:run(action)
end

--搜索焦点子组件，没有则返回nil（lua层不应该调用此方法）
function clsUILayer:searchFocusLayer(x,y)
  local focus = nil;
  --从上到下依次探查
  for i=self.children:size(),1,-1 do
    local layer=self.children:get(i)
    if layer.visibility and layer.enabled then
      --子Layer可见并且可以接收事件
      if x >= layer.x and x <= layer.x + layer.width and y >= layer.y and y <= layer.y + layer.height then
        --命中
        focus = layer;
        break;
      end
    end
  end
  return focus
end
