--[[
  description:脚本解释器
  author:wp_g4
  date:2012/04/19
--]]

Interpreter={}

--常量
Interpreter.OperateType={}
Interpreter.OperateType.ASSIGN=0
Interpreter.OperateType.PLUS=1
Interpreter.OperateType.MINUS=2
Interpreter.OperateType.MULTIPLY=3
Interpreter.OperateType.DIVIDE=4
Interpreter.OperateType.MOD=5

Interpreter.ValueType={}
Interpreter.ValueType.CONST=0
Interpreter.ValueType.VARIABLE=1
Interpreter.ValueType.SWITCH=2

Interpreter.PropertyType={}
Interpreter.PropertyType.STR=0
Interpreter.PropertyType.AGI=1
Interpreter.PropertyType.INT=2
Interpreter.PropertyType.VIT=3
Interpreter.PropertyType.DEX=4
Interpreter.PropertyType.LUCK=5
Interpreter.PropertyType.MAXHP=6
Interpreter.PropertyType.MAXSP=7
Interpreter.PropertyType.HP=8
Interpreter.PropertyType.SP=9
Interpreter.PropertyType.LEVEL=10
Interpreter.PropertyType.EXP=11

--方法列表
Interpreter.functionList={
  [100000]="executeScript",
  [100001]="sleep",
  
  [101000]="changeMap",
  [101001]="forceMove",
  [101002]="showTimer",
  [101003]="playMusic",
  [101004]="stopMusic",
  [101005]="openShop",
  [101006]="showMessageDialog",
  [101007]="showInputDialog",
  [101008]="showOptionDialog",
  [101009]="changeFace",
  [101010]="startFight",
  [101011]="showImage",
  [101012]="removeImage",
  [101013]="moveImage",
  [101014]="rotateImage",
  [101015]="toneImage",
  [101016]="playAnimation",
  [101017]="playAnimationInFight",
  [101018]="toneScene",
  [101019]="shakeScene",
  [101020]="npcForceMove",
  
  [102001]="getPlayerProperty",
  [102002]="getPlayerName",
  [102003]="getPlayerSkillStatus",
  [102004]="getPlayerEquipStatus",
  [102005]="getMoneyNum",
  [102006]="getItemNum",
  [102007]="getEquipNum",
  [102008]="getTaskStep",
  [102009]="applyTask",
  [102010]="nextStepTask",
  [102011]="giveUpTask",
  [102012]="refreshTaskList",
  [102013]="getTaskState"
}

--[[
===============================================================
注意事项:
1.lua层编写者只能调用runScript(scriptId)方法，其它方法不应该调用
2.一次只能运行一个脚本，也即上一次runScript未结束则不能进行新的runScript
===============================================================
--]]

---------------------------------------------------------------
--运行脚本,必需运行在主线程
function Interpreter:runScript(scriptId)
  local file=Game.path.."/data/script/script"..scriptId..".gat"
  local scriptFunction=loadfile(file)
  --将脚本调入子线程运行
  ScriptThread:start(scriptFunction)
end

--结束当前正在执行的事件,比如对话框、选择框等。执行此方法后，主线程阻塞，脚本继续运行
function Interpreter:endCurrentEvent(...)
  ScriptThread:resume(unpack(arg))
end

---------------------------------------------------------------
--分析命令，由脚本自动调用
function Interpreter:doCommand(id,...)
  local fun=function()
    return self:executeCommand(id,unpack(arg))
  end
  --executeScript运行在子线程，其它运行在主线程中
  if id==100000 then
    return fun()
  else
    return ScriptThread:runFunctionInMainThread(fun)
  end
end

--执行命令,executeScript运行在子线程，其它运行在主线程中
function Interpreter:executeCommand(id,...)
  local fun=Interpreter[Interpreter.functionList[id]]
  return fun(self,unpack(arg))
end

--注:以下方法中executeScript运行在子线程，其它均运行在主线程中
--============流程控制类============
--执行公共脚本
function Interpreter:executeScript(scriptId)
  local file=Game.path.."/data/script/script"..scriptId..".gat"
  local fun=loadfile(file)
  fun()
end

--等待
function Interpreter:sleep(millisecond)
  --millisecond毫秒后结束此事件，脚本继续运行
  Scheduler:scheduleTask(self,"endCurrentEvent",millisecond)
  return false  --返回值为flase表示此方法不立即返回
end

--============游戏表现类============
--切换地图
function Interpreter:changeMap(mapId,row,col,face)
  --TODO 切换地图
  return true
end

--强制移动
function Interpreter:forceMove(mapId,row,col)
end

--显示倒计时
function Interpreter:showTimer(millisecond)
end

--播放音乐
function Interpreter:playMusic(name,loop)
end

--停止音乐
function Interpreter:stopMusic(name)
end

--开启商店 e.g {10,2,5,0}
function Interpreter:openShop(itemIds)
end

--显示对话
function Interpreter:showMessageDialog(name,content,bustPath,position)
  local delegate={}
  function delegate:dialogEnd()
    Interpreter:endCurrentEvent()
  end
  GameLayer:showNormalDialog(name,content,bustPath,position,delegate,"dialogEnd")
  return false  --返回值为flase表示此方法不立即返回
end

--显示输入框
function Interpreter:showInputDialog(tip)
  return false  --返回值为flase表示此方法不立即返回
end

--显示选项框 e.g  {"yes","no","cancel"}
function Interpreter:showOptionDialog(name,content,bustPath,options)
  local delegate={}
  function delegate:optionSelected(index)
    Interpreter:endCurrentEvent(index)
  end
  GameLayer:showOptionDialog(name,content,bustPath,options,delegate,"optionSelected")
  return false  --返回值为flase表示此方法不立即返回
end

--更改面向
function Interpreter:changeFace(face)
  GameData.curPlayer:changeFace(face)
  return true
end

--开启战斗
function Interpreter:startFight(enemyTroopId,type)
  GameData.battle.enemyTroopId=enemyTroopId
  GameData.battle.battleType=type
  GameData.battle.bg=GameData.curMap.battleBack
  Game:changeScene(Game.SCENE_BATTLE)
  return false
end

--显示图片
function Interpreter:showImage(name,x,y,millisecond)
end

--移除图片
function Interpreter:removeImage(name)
end

--移动图片
function Interpreter:moveImage(name,x,y,millisecond)
end

--旋转图片
function Interpreter:rotateImage(name,type,degree,millisecond)
end

--更改图片色调
function Interpreter:toneImage(name,a,r,g,b,millisecond)
end

--显示动画
function Interpreter:playAnimation(animationId,x,y)
end

--显示动画
function Interpreter:playAnimationInFight(animationId,targetType,targetId)
end

--更改画面色调
function Interpreter:toneScene(a,r,g,b,millisecond)
end

--画面震动
function Interpreter:shakeScene(range,millisecond,times)
end

--Npc强制移动
function Interpreter:npcForceMove(npcId,mapId,row,col)
end

--============数据处理类============
--获取玩家属性
function Interpreter:getPlayerProperty(playerId,propertyType)
end

--获取玩家名称
function Interpreter:getPlayerName(playerId)
end

--获取技能状态
function Interpreter:getPlayerSkillStatus(playerId,skillId)
end

--获取装备状态 
function Interpreter:getPlayerEquipStatus(playerId,equipId)
end

--获取金钱数量
function Interpreter:getMoneyNum()
end

--获取物品数量
function Interpreter:getItemNum(itemId)
end

--获取装备数量
function Interpreter:getEquipNum(equipId)
end

--获取任务步骤
function Interpreter:getTaskStep(id)
end

--申请任务
function Interpreter:applyTask(id)
  smNet:applyTask(id)
  return true
end

--任务下一步
function Interpreter:nextStepTask(id)
  smNet:nextStepTask(id)
  return true
end

--放弃任务
function Interpreter:giveUpTask(id)
  smNet:giveUpTask(id)
  return true
end

--刷新任务列表
function Interpreter:refreshTaskList()
  smNet:refreshTaskList()
  return true
end

--获取任务状态
function Interpreter:getTaskState(taskId)
  smLog:info("tastId:"..tastId)
  local status=false
  for _,v in ipairs(GameData.curPlayer.taskList) do
    if v.index==taskId then
      status = true
      break
    end
  end
  Interpreter:endCurrentEvent(status)
  return true
end