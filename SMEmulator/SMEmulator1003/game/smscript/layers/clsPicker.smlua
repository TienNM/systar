--[[
  description:角色选择器（战斗）。
  author:wp_g4
  date:2011/05/20
--]]

--类结构定义
clsPicker={}
setmetatable(clsPicker,clsUILayer)
clsPicker.__index=clsPicker

clsPicker.actors=nil			--角色列表
clsPicker.startX=nil				--起点x坐标
clsPicker.endX=nil					--终点x坐标
clsPicker.lastUpdateTime=nil		--上次刷新时间
clsPicker.pause=false				--是否暂停中

--构造器
function clsPicker:new(x,y,width,height,actors)
  local self = clsUILayer:new(x,y,width,height)
  setmetatable(self,clsPicker)
  self.actors=actors
  self.callback="onActorPicked"
  --背景
  self.startX=height/2
  self.endX=width-height/2
  self.image=Skin:createSelectedBg(width,height)
  for k,actor in pairs(actors) do
    local w,h=actor.battlerImage:getWidth(),actor.battlerImage:getHeight()
    local actorLayer=clsUILayer:new(self.startX,height,w/3,h/4)
    actorLayer.anchor={0.5,1}
    actorLayer.tag=actor.id
    if math.floor(actor.id/1000000)==101 then
      --player
      actorLayer.image=actor.battlerImage:clip(0,0,w/3,h/4):flip(0)
    else
      --enemy
      actorLayer.image=actor.battlerImage:clip(0,0,w/3,h/4)
    end
    self:addChild(actorLayer)
  end
  return self
end

--更新选择器
function clsPicker:refresh()
  if self.pause then
    --暂停中则不更新
    self.lastUpdateTime=Game:getTime()
    return
  end
  if self.lastUpdateTime==nil then
    self.lastUpdateTime=Game:getTime()
  end
  --将到达终点的角色移回起点
  for i,actorLayer in ipairs(self.children) do
    if actorLayer.x>=self.endX then
      actorLayer.x=self.startX
    end
  end
  --根据角色攻击速度移动精灵
  local idPicked=nil
  local curTime=Game:getTime()
  local delta=curTime-self.lastUpdateTime
  self.lastUpdateTime=curTime
  for k,actor in pairs(self.actors) do
    local atkSpeed=actor:atkSpeed()  --每秒移动atkSpeed距离
    local actorLayer=self:childWithTag(actor.id)
    actorLayer.x=actorLayer.x+atkSpeed/1000*delta
    if actorLayer.x>=self.endX then
      --有精灵走到了终点
      idPicked=actor.id
      actorLayer.x=self.endX
      self.pause=true
      break
    end
  end
  if idPicked then
    callFunction(self.delegate,self.callback,self,idPicked)
  end
end

function clsPicker:onTouch(event)
  --不做任何处理
end
