HandlerMap.movePlayer={}

function HandlerMap.movePlayer:handleMessage(msg)
  smLog:info("移动角色")
  Notifier:notify(Const.NotifyCMD.Net.MOVE_PLAYER,HandlerMap:msgToLua(msg))
end

--====================================================
HandlerMap.loadMap={}

function HandlerMap.loadMap:handleMessage(msg)
  smLog:info("加载地图")
  GameData.curMap=Dictionary:getMap(GameData.curPlayer.mapId)
  --加载地图后更新NPC列表
  GameData.curNpcList={}
  --(1)地图NPC
  for k,mapId in pairs(GameData.curMap.npcs) do
    local npc=clsNpc:new()
    local npcDict=Dictionary.npcs[mapId]
    npc.id=npcDict.id
    npc.row=npcDict.row
    npc.col=npcDict.col
    npc.name=npcDict.name
    npc.charImgName=npcDict.charImg
    if npc.charImgName then
      npc.charImg=smImageFactory:loadImage(npc.charImgName)
    end
    npc.headImgName=npcDict.headImg
    if npc.headImgName then
      npc.headImg=smImageFactory:loadImage(npc.headImgName)
    end
    npc.face=npcDict.face
    npc.moveType=npcDict.moveType
    npc.speedLevel=npcDict.speedLevel
    npc.penetrable=npcDict.penetrable
    npc.moveDelegate=self
    GameData.curNpcList[npc.id]=npc
  end
  --(2)传送点
  msg=HandlerMap:msgToLua(msg)
  local mapEntryList=msg.mapEntryList
  for i,mapEntry in ipairs(mapEntryList) do
    local npc=clsNpc:new()
    npc.id=mapEntry.id
    npc.mapId=mapEntry.mapId
    npc.col=mapEntry.x
    npc.row=mapEntry.y
    npc.avatar=mapEntry.avatar
    npc.type=clsNpc.TYPE_MAPENTRY
    npc.penetrable=false
    npc.charImgName="/image/character/001-Fighter01.png"
    if npc.charImgName then
      npc.charImg=smImageFactory:loadImage(npc.charImgName)
    end
    GameData.curNpcList[npc.id]=npc
  end
  Notifier:notify(Const.NotifyCMD.Net.LOAD_MAP)
end

--====================================================
HandlerMap.enterMapEntry={}

function HandlerMap.enterMapEntry:handleMessage(msg)
  smLog:info("进入传送点")
  GameData.curPlayer.mapId=msg:getInt("mapId")
  GameData.curPlayer.col=msg:getInt("x")
  GameData.curPlayer.row=msg:getInt("y")
  smNet:loadMap()
end
