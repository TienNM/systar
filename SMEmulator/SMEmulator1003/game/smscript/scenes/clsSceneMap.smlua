--[[
  description:地图场景  TODO 重新核对坐标
  author:wp_g4
  date:2011/12/18
--]]

--结构定义
clsSceneMap = {}
setmetatable(clsSceneMap,clsScene)
clsSceneMap.__index = clsSceneMap

--按钮tag枚举
clsSceneMap.TAG_BAG=1		--背包
clsSceneMap.TAG_STATUS=2	--属性
clsSceneMap.TAG_SKILL=3		--技能
clsSceneMap.TAG_TALENT=4	--天赋
clsSceneMap.TAG_TROOP=5		--队列
clsSceneMap.TAG_TANK=6		--车厢
clsSceneMap.TAG_MAG=7		--弹仓
clsSceneMap.TAG_TASK=8		--任务
clsSceneMap.TAG_SYSTEM=9	--系统
clsSceneMap.TAG_CHAT=10		--聊天
clsSceneMap.TAG_PLAYER_FACE=11	--人物信息

--字段
clsSceneMap.mapBgLayer=nil     		--背景(尺寸同窗口)
clsSceneMap.mapFgLayer=nil    		--前景（尺寸同窗口）
clsSceneMap.spriteLayer=nil    		--精灵层（尺寸同地图）
clsSceneMap.menuLayer=nil    		--菜单层

clsSceneMap.chatButton=nil			--聊天按钮
clsSceneMap.chatTip=nil				--聊天提示数字
clsSceneMap.chatLayer=nil			--聊天层

clsSceneMap.playerFaceBackgroundLayer=nil	--人物面板按钮背景
clsSceneMap.playerFaceButton=nil	--人物面板按钮
clsSceneMap.playerPanelLayer=nil	--人物面板层

clsSceneMap.mapPanelLayer=nil		--地图面板层

clsSceneMap.aStar=nil      			--A*寻路工具
clsSceneMap.viewport=nil			--视口

clsSceneMap.stepQueue=nil			--与服务器同步用的step队列，保存角色已经走过的路径

--构造器
function clsSceneMap:new()
  local self = clsScene:new()
  setmetatable(self,clsSceneMap)
  local screenWidth,screenHeight=Game:getWidth(),Game:getHeight()
  --背景实例化
  self.mapBgLayer=clsTiled:new(screenWidth/2,screenHeight/2,screenWidth,screenHeight)
  self.mapBgLayer.delegate=self
  GameLayer:addChildToScene(self.mapBgLayer)
  --精灵层实例化
  self.spriteLayer=clsUILayer:new(0,0,screenWidth,screenHeight)
  self.spriteLayer.anchor={0,0}
  self.spriteLayer.enabled=false
  GameLayer:addChildToScene(self.spriteLayer)
  --前景实例化
  self.mapFgLayer=clsTiled:new(screenWidth/2,screenHeight/2,screenWidth,screenHeight)
  self.mapFgLayer.enabled=false
  GameLayer:addChildToScene(self.mapFgLayer)
  --主菜单
  local width,height=350,42
  --背包 地图 属性 人物 技能 炮弹
  local imageUp={"/image/skin/bag_up.png","/image/skin/status_up.png","/image/skin/skill_up.png",
                 "/image/skin/tianfu_up.png","/image/skin/party_up.png","/image/skin/tank_up.png",
                 "/image/skin/dancang_up.png","/image/skin/misson_up.png","/image/skin/system_up.png"}
  local imageDown={"/image/skin/bag_down.png","/image/skin/status_down.png","/image/skin/skill_down.png",
                   "/image/skin/tianfu_down.png","/image/skin/party_down.png","/image/skin/tank_down.png",
                   "/image/skin/dancang_down.png","/image/skin/misson_down.png","/image/skin/system_down.png"}
  self.menuLayer=clsUILayer:new(screenWidth,screenHeight,width,height)
  self.menuLayer.anchor={1,1}
  self.menuLayer.image=smImageFactory:loadImage("/image/skin/window_main.png")
  local bw,bh,gap,num=30,30,5,9
  for i=1,num do
    local button=clsUIButton:new((self.menuLayer.width-num*bw-(num-1)*gap)/2+bw/2+(i-1)*(bw+gap)+2*gap,
                                  self.menuLayer.height/2+gap/2,bw,bh)
    button.delegate=self
    button.normalImage=smImageFactory:loadImage(imageUp[i])
    button.highlightImage=smImageFactory:loadImage(imageDown[i])
    button.tag=i
    self.menuLayer:addChild(button)
  end
  GameLayer:addChildToScene(self.menuLayer)
  
  self.chatButton=clsUIButton:new(8,screenHeight-4,30,30)
  self.chatButton.anchor={0,1}
  self.chatButton.delegate=self
  self.chatButton.tag=self.TAG_CHAT
  self.chatButton.normalImage=smImageFactory:loadImage("/image/skin/talk_up.png")
  self.chatButton.highlightImage=smImageFactory:loadImage("/image/skin/talk_down.png")
  
  self.chatTip=clsUIImageNumber:new(12,2,20,13,"0",smImageFactory:loadImage("/image/skin/number_talk.png"))
  self.chatTip.type=clsUIImageNumber.ADDITION_TYPE
  self.chatButton:addChild(self.chatTip)
  GameLayer:addChildToScene(self.chatButton)
  
  self.chatLayer=clsChatPanel:new(8,screenHeight-32)
  GameLayer:addChildToScene(self.chatLayer)
  
  self.playerPanelLayer=clsPlayerPanel:new(8,8)
  GameLayer:addChildToScene(self.playerPanelLayer)
  
  self.playerFaceBackgroundLayer=clsUILayer:new(12,12,73,74)
  self.playerFaceBackgroundLayer.anchor={0,0}
  self.playerFaceBackgroundLayer.image=smImageFactory:loadImage("/image/skin/face_button.png")
  GameLayer:addChildToScene(self.playerFaceBackgroundLayer)
  
  self.playerFaceButton=clsUIButton:new(44,45,73,74)
  self.playerFaceButton.anchor={0.5,0.5}
  self.playerFaceButton.delegate=self
  self.playerFaceButton.tag=self.TAG_PLAYER_FACE
  self.playerFaceButton.normalImage=smImageFactory:loadImage("/image/skin/face1.png")
  self.playerFaceButton.highlightImage=smImageFactory:loadImage("/image/skin/face1_down.png")
  GameLayer:addChildToScene(self.playerFaceButton)
  
  self.mapPanelLayer=clsMapPanel:new(screenWidth-8,8)
  GameLayer:addChildToScene(self.mapPanelLayer)
  
  self.stepQueue=clsQueue:new()
  return self
end

-- 开始
function clsSceneMap:onStart()
  smLog:info("地图场景启动")
  --注册接收通知
  Notifier:addObserver(Const.NotifyCMD.Character.MOVE,self,self.characterMove)
  Notifier:addObserver(Const.NotifyCMD.Character.FACE_CHANGED,self,self.characterFaceChanged)
  Notifier:addObserver(Const.NotifyCMD.Character.MAP_CHANGED,self,self.characterMapChanged)
  --定时任务
  Scheduler:scheduleTask(self,"syncLocation",1000,-1)
  self:buildMap()
end

-- 更新
function clsSceneMap:update()
  --smLog:info("地图场景更新")
  --更新视口
  self:updateViewport()
end

-- 退出
function clsSceneMap:onStop()
  smLog:info("地图场景退出")
  smAudioPlayer:stop()
  Scheduler:unScheduleTask(self,"syncLocation")
  self:syncLocation()
  Notifier:removeObserver(Const.NotifyCMD.Character.MOVE,self)
  Notifier:removeObserver(Const.NotifyCMD.Character.FACE_CHANGED,self)
  Notifier:removeObserver(Const.NotifyCMD.Character.MAP_CHANGED,self)
end

--切换地图
function clsSceneMap:buildMap()
  GameData.curMap=Dictionary:getMap(GameData.curPlayer.mapId)
  self.aStar=clsAStar:new(GameData.curMap.areas)
  --预加载地图图集
  for _,v in pairs(GameData.curMap.tilesets) do
    smImageFactory:loadImage(v.path)
  end
  --加载背景
  local bgLayers=clsList:new()
  for i=1,table.getn(GameData.curMap.layers) do
    local layer=GameData.curMap.layers[i]
    if layer.deepth<0 then
      bgLayers:add(layer)
    end
  end
  self.viewport=self:checkViewport(self:characherLocation(GameData.curPlayer))
  self.mapBgLayer:init(GameData.curMap.id,bgLayers,self.viewport)
  --精灵层移除所有sprite
  self.spriteLayer:clear()
  --修正精灵层大小
  self.spriteLayer.width=GameData.curMap.cellWidth*GameData.curMap.colNum
  self.spriteLayer.height=GameData.curMap.cellHeight*GameData.curMap.rowNum
    --主角
    local playerSprite=clsSprite:new(GameData.curPlayer.charImg,
       GameData.curPlayer.charImg:getWidth()/4,GameData.curPlayer.charImg:getHeight()/4)
    playerSprite.tag=GameData.curPlayer.id
    playerSprite.delegate=self
    playerSprite.z=GameData.curPlayer.row
    playerSprite.x,playerSprite.y=self:characherLocation(GameData.curPlayer)
    self.spriteLayer:addChild(playerSprite)
    --Npc
    for k,v in pairs(GameData.curMap.npcs) do
      local npc=GameData:getNpc(v)
      local npcSprite=clsSprite:new(npc.charImg,
        npc.charImg:getWidth()/4,npc.charImg:getHeight()/4)
      npcSprite.tag=npc.id
      npcSprite.delegate=self
      npcSprite.z=npc.row
      npcSprite.x,npcSprite.y=self:characherLocation(npc)
      self.spriteLayer:addChild(npcSprite)
    end
  self.spriteLayer:sortChildren()
  self.spriteLayer.x,self.spriteLayer.y=-self.viewport.x,-self.viewport.y
  --加载前景
  local fgLayers=clsList:new()
  for i=1,table.getn(GameData.curMap.layers) do
    local layer=GameData.curMap.layers[i]
    if layer.deepth>0 then
      fgLayers:add(layer)
    end
  end
  if fgLayers:size()>0 then
    self.mapFgLayer.visibility=true
    self.mapFgLayer:init(GameData.curMap.id,fgLayers,self.viewport)
  else
    self.mapFgLayer.visibility=false
  end
end

--地图更新视口
function clsSceneMap:updateViewport()
  --检测viewport是否改变
  local sprite=self.spriteLayer:childWithTag(GameData.curPlayer.id)
  local viewport=self:checkViewport(sprite.x,sprite.y)
  local offsetX=viewport.x-self.viewport.x
  local offsetY=viewport.y-self.viewport.y
  if offsetX~=0 or offsetY~=0 then
    --viewport有变化
    self.viewport=viewport
    --背景移动
    self.mapBgLayer:trackViewport(self.viewport)
    --前景移动
    if self.mapFgLayer.visibility then
      self.mapFgLayer:trackViewport(self.viewport)
    end
    self.spriteLayer.x,self.spriteLayer.y=-self.viewport.x,-self.viewport.y
  end
end

--计算viewport,相机焦点为(x,y)
function clsSceneMap:checkViewport(x,y)
  local px,py=x,y
  local width=Game:getWidth()
  local height=Game:getHeight()
  local vx=px-width/2
  local vy=py-height/2
  if vx<0 then
    vx=0
  end
  if vx>GameData.curMap.colNum*GameData.curMap.cellWidth-width then
    vx=GameData.curMap.colNum*GameData.curMap.cellWidth-width
  end
  if vy<0 then
    vy=0
  end
  if vy>GameData.curMap.rowNum*GameData.curMap.cellHeight-height then
    vy=GameData.curMap.rowNum*GameData.curMap.cellHeight-height
  end
  return {x=vx,y=vy,width=width,height=height}
end

--计算characher当前物理坐标（双脚之间）
function clsSceneMap:characherLocation(character)
  local row,col=character.row,character.col
  local cellWidth,cellHeight=GameData.curMap.cellWidth,GameData.curMap.cellHeight
  return col*cellWidth+cellWidth/2,row*cellHeight+cellHeight
end

--地图点击事件
function clsSceneMap:mapTapped(target,row,col)
  smLog:info("逻辑坐标: row="..row.." col="..col)
  --向player发送移动命令
  --(1)清除原有的行走命令
  GameData.curPlayer.moveSequence:clear()
  --(2)获取寻路起点
  local curRow=GameData.curPlayer.row
  local curCol=GameData.curPlayer.col
  --(3)寻路
  local directions=self.aStar:searchDirection(curRow+1,curCol+1,row,col)
  --(4)设置行走命令(TODO 可优化)
  while directions:size()>0 do
    local direction=directions:poll()
    GameData.curPlayer.moveSequence:offer(direction)
  end
end

--按钮点击事件
function clsSceneMap:buttonTapped(button)
  local index=button.tag
  if index==TAG_BAG then
    --背包
    smLog:info("[背包]功能开发中")
  elseif index==self.TAG_STATUS then
    --属性
    smLog:info("[属性]功能开发中")
  elseif index==self.TAG_SKILL then
    --技能
    smLog:info("[技能]功能开发中")
  elseif index==self.TAG_TALENT then
    --天赋
    smLog:info("[天赋]功能开发中")
  elseif index==self.TAG_TROOP then
    --队列
    smLog:info("[队列 ]功能开发中")
  elseif index==self.TAG_TANK then
    --车厢
    smLog:info("[车厢]功能开发中")
  elseif index==self.TAG_MAG then
    --弹仓
    smLog:info("[弹仓]功能开发中")
  elseif index==self.TAG_TASK then
    --任务
    smLog:info("[任务]功能开发中")
  elseif index==self.TAG_SYSTEM then
    --系统
    smLog:info("[系统]功能开发中")
  elseif index==self.TAG_CHAT then
  	--聊天
  	if self.chatLayer.alpha==0 then
  		self.chatLayer:setVisible(true)
  	else
  		self.chatLayer:setVisible(false)
  	end
  elseif index==self.TAG_PLAYER_FACE then
  	--人物头像
	if self.playerPanelLayer.alpha==0 then
		self.playerPanelLayer:setVisible(true)
	else
		self.playerPanelLayer:setVisible(false)
	end
  else
    --未知
    smLog:info("未知功能")
  end
end

--============处理通知============
--character移动
function clsSceneMap:characterMove(param)
  local character=param.character
  local direction=param.direction
  --目标点
  local row,col=character.row,character.col
  if direction==0 then
    --上
    row=row-1
  elseif direction==1 then
    --下
    row=row+1
  elseif direction==2 then
    --左
    col=col-1
  elseif direction==3 then
    --右
    col=col+1
  else
    --未知方向
    smLog:info("未知的行走方向")
  end
  --越界判断
  if row<0 or row>GameData.curMap.rowNum-1 or col<0 or col>GameData.curMap.colNum-1 then
    character.moveSequence:clear()
    return
  end
  --检查地图通行度
  if GameData.curMap.areas[row+1][col+1]==-1 then
    character.moveSequence:clear()
    return
  end
  --检查碰撞
  if character==GameData.curPlayer then
    --主角行走
    local npc=GameData:getNpcAt(row,col)
    if npc and not npc.penetrable then
      smLog:info("主角撞到Npc")
      --GameData:checkScript(npc)
      return
    else
      --smLog:info("主角行走")
      character.moving=true
      local sprite=self.spriteLayer:childWithTag(character.id)
      sprite:walk((col-character.col)*GameData.curMap.cellWidth,(row-character.row)*GameData.curMap.cellHeight,320)
      sprite.z=row
      if character.row ~= row then
        self.spriteLayer:sortChildren()
      end
      character.row,character.col=row,col
      self.stepQueue:offer(direction)
    end
  else
    --Npc行走
    local npcMovable=true
    if not character.penetrable then
      if row==GameData.curPlayer.row and col==GameData.curPlayer.col then
        smLog:info("Npc撞到主角")
        --GameData:checkScript(character)
        npcMovable=false
      end
      if npcMovable then
        local npc=GameData:getNpcAt(row,col)
        if npc and npc~=character and not npc.penetrable then
          smLog:info("Npc撞到Npc")
          npcMovable=false
        end
      end
    end
    if npcMovable then
      --smLog:info("npc行走")
      character.moving=true
      local sprite=self.spriteLayer:childWithTag(character.id)
      sprite:walk((col-character.col)*GameData.curMap.cellWidth,(row-character.row)*GameData.curMap.cellHeight,320)
      sprite.z=row
      if character.row ~= row then
        self.spriteLayer:sortChildren()
      end
      character.row,character.col=row,col
    end
  end
end

--clsSprite移动结束回调
function clsSceneMap:spriteWalkEnd(sprite)
  if sprite.tag == GameData.curPlayer.id then
    --主角移动结束
    smLog:info("主角停止")
    GameData.curPlayer.moving=false
    GameData.curPlayer:checkMove()
  else
    --npc移动结束
    local npc=GameData:getNpc(sprite.tag)
    npc.moving=false
    npc:checkMove()
  end
end

--与服务器同步角色坐标
function clsSceneMap:syncLocation()
  --syncLocation
  local str=nil
  while self.stepQueue:size()>0 do
    if str then
      str=str..","
    else
      str=""
    end
    str=str..self.stepQueue:poll()
  end
  if str then
    smNet:move(str)
  end
end

--character面向改变
function clsSceneMap:characterFaceChanged(param)
  local sprite=self.spriteLayer:childWithTag(param.character.id)  
  sprite.frameIndex=param.character:getCurFrameIndex()
end

--character地图改变
function clsSceneMap:characterMapChanged(param)
  if param.character==GameData.curPlayer then
    self:buildMap()
  end
end
