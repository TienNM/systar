--[[
  description:战斗场景
  author:wp_g4
  date:2012/05/19
--]]

--结构定义
clsSceneBattle = {}
setmetatable(clsSceneBattle,clsScene)
clsSceneBattle.__index = clsSceneBattle

--字段
clsSceneBattle.ACTION_TYPE_ATTACK=1			--动作:攻击
clsSceneBattle.ACTION_TYPE_SKILL=2			--动作:技能
clsSceneBattle.ACTION_TYPE_ITEM=3			--动作:物品
clsSceneBattle.ACTION_TYPE_DEFEND=4			--动作:防御
clsSceneBattle.ACTION_TYPE_ESCAPE=5			--动作:逃跑

clsSceneBattle.menuItems={"攻击","技能","物品","防御","逃跑"}
clsSceneBattle.curActor=nil					--当前行动者
clsSceneBattle.curActionType=nil			--当前动作
clsSceneBattle.curSkill=nil					--当前技能(curActionType等于ACTION_TYPE_SKILL时有效)
clsSceneBattle.curItem=nil					--当前物品(curActionType等于ACTION_TYPE_ITEM时有效)
clsSceneBattle.curTarget=nil				--当前行动目标

clsSceneBattle.bgLayer=nil					--背景层
clsSceneBattle.spriteLayer=nil   			--精灵层
clsSceneBattle.playerInfoLayer=nil			--玩家信息层
clsSceneBattle.picker=nil					--角色选择器
clsSceneBattle.menu=nil						--菜单
clsSceneBattle.cursor=nil					--箭头


--构造器
function clsSceneBattle:new()
  local self = {}
  self = clsScene:new()
  setmetatable(self,clsSceneBattle)
  local screenWidth,screenHeight=Game:getWidth(),Game:getHeight()
  --背景层
  local bgImage=Image:getImage(GameData.battle.bg)
  self.bgLayer=clsUILayer:new(screenWidth/2,screenHeight/2,bgImage:getWidth(),bgImage:getHeight())
  self.bgLayer.image=bgImage
  GameLayer:addChildToScene(self.bgLayer)
  --精灵层
  self.spriteLayer=clsUILayer:new(screenWidth/2,screenHeight/2,screenWidth,screenHeight)
  GameLayer:addChildToScene(self.spriteLayer)
  --玩家信息层
  self.playerInfoLayer=clsUILayer:new(screenWidth/2,screenHeight,screenWidth,160)
  self.playerInfoLayer.anchor={0.5,1}
  self.playerInfoLayer.image=Skin:createBgWithFrame(screenWidth,160)
  GameLayer:addChildToScene(self.playerInfoLayer)
  --菜单
  self.menu=clsUIMenu:new(0,screenHeight-160,120,170)
  self.menu.anchor={0,1}
  self.menu.items=self.menuItems
  self.menu.alpha=0.7
  self.menu.delegate=self
  self.menu:refresh()
  self.menu.visibility=false
  GameLayer:addChildToScene(self.menu)
  --光标
  self.cursor=clsUILayer:new(0,0,16,16)
  self.cursor.visibility=false
  self.cursor.anchor={0.5,1}
  self.spriteLayer:addChild(self.cursor)
  return self
end

-- 开始
function clsSceneBattle:onStart()
  smLog:info("战斗场景启动")
  GameData.updateSwitch=false
  local screenWidth,screenHeight=Game:getWidth(),Game:getHeight()
  --初始化敌人队伍
  GameData.battle:initEnemyTroop()
  for i,enemy in ipairs(GameData.battle.enemys) do
    local enemySprite=clsUILayer:new(enemy.x,enemy.y,enemy.battlerImage:getWidth(),enemy.battlerImage:getHeight())
    enemySprite.anchor={0.5,1}
    enemySprite.tag=enemy.id
    enemySprite.image=enemy.battlerImage
    enemySprite.delegate=self
    self.spriteLayer:addChild(enemySprite)
  end
  --初始化玩家队伍
  for i,player in ipairs(GameData.playerTroop.players) do
    local x,y=768,224+64*i
    local playerSprite=clsUILayer:new(x,y,player.battlerImage:getWidth(),player.battlerImage:getHeight())
    playerSprite.anchor={0.5,1}
    playerSprite.tag=player.id
    playerSprite.image=player.battlerImage
    playerSprite.delegate=self
    self.spriteLayer:addChild(playerSprite)
  end
  --初始化玩家队伍信息面板
  local gap=15
  local playerNum=table.getn(GameData.playerTroop.players)
  local width,height=(screenWidth-(playerNum+1)*gap)/playerNum,self.playerInfoLayer.height-2*gap
  for i,player in ipairs(GameData.playerTroop.players) do
    local infoPane=clsPlayerInfo:new(gap+(i-1)*(width+gap),self.playerInfoLayer.height/2,width,height,player)
    infoPane.anchor={0,0.5}
    self.playerInfoLayer:addChild(infoPane)
  end
  --角色选择器
  local characters={}
  for i,enemy in ipairs(GameData.battle.enemys) do
    table.insert(characters,enemy)
  end
  for i,player in ipairs(GameData.playerTroop.players) do
    table.insert(characters,player)
  end
  self.picker=clsPicker:new(screenWidth/2,100,screenWidth/2,32,characters)
  self.picker.delegate=self
  GameLayer:addChildToScene(self.picker)
end


-- 更新
function clsSceneBattle:update()
  --smLog:info("战斗场景更新")
  self.picker:refresh()
end

--角色选择器回调
function clsSceneBattle:onCharacterPick(picker,id)
  if math.floor(id/1000000)==101 then
    --player
    self:showMenuForPlayer(id)
  else
    --enemy
    self:doEnemyAction(id)
  end
end

--为player显示菜单
function clsSceneBattle:showMenuForPlayer(id)
  --判断当前player的序号
  local index=1
  for i,player in ipairs(GameData.playerTroop.players) do
    if player.id==id then
      index=i
      break
    end
  end
  self.curActor=GameData.playerTroop.players[index]
  smLog:info("player["..self.curActor.name.."]选择动作")
  --显示动作菜单
  self.menu.x=(index-1)*240
  self.menu.visibility=true
end

--菜单被选中
function clsSceneBattle:menuItemSelected(index)
  self.curActionType=index
  smLog:info("["..self.curActor.name.."]选择了["..self.menuItems[self.curActionType].."]")
  if index==1 then
    --攻击
    self:selectedEnemy()
  elseif index==2 then
    --技能
    self:selectedSkill()
  elseif index==3 then
    --物品
    self:selectedItem()
  elseif index==4 then
    --防御
    self:defend()
  elseif index==5 then
    --逃跑
    self:escape()
  end
  self.menu.visibility=false
end

--player选择目标攻击目标(单体攻击敌人时)
function clsSceneBattle:selectedEnemy()
  --当前目标默认为敌人队伍中的第一个目标
  self.curTarget=GameData.battle.enemys[1]
  self:showCursor()
end

--player选择技能
function clsSceneBattle:selectSkill()
end

--player选择物品
function clsSceneBattle:selectItem()
end

--player防御
function clsSceneBattle:defend()
end

--player逃跑
function clsSceneBattle:escape()
  smLog:info("逃跑失败")
  self.picker.pause=false
end

--enemy开始动作
function clsSceneBattle:doEnemyAction(id)
  for i,enemy in ipairs(GameData.battle.enemys) do
    if enemy.id==id then
      self.curActor=enemy
      break
    end
  end
  smLog:info("["..self.curActor.name.."]开始动作")
end

--显示光标在当前目标上
function clsSceneBattle:showCursor()
  --取消精灵层所有精灵的动作
  for i,child in ipairs(self.spriteLayer.children) do
    child:stopAllAction()
  end
  --取当前目标对应的精灵
  local sprite=self.spriteLayer:childWithTag(self.curTarget.id)
  --计算sprite顶部中间的坐标
  local x,y=sprite.x-sprite.anchor[1]*sprite.width+sprite.width/2,sprite.y-sprite.anchor[2]*sprite.height
  self.cursor.x,self.cursor.y=x,y
  self.cursor.visibility=true
  self.cursor:runAction(Skin.cursorAnimateAction)
  sprite:stopAllAction()
  local s=Action:newSequenceAction(-1,Action:newBlinkAction())
  sprite:runAction(s)
end

--回调:精灵被点击
function clsSceneBattle:layerTapped(layer,event)
  if event.type==UIConst.eventType.DOWN then
    local targetType=-1   --0是player 1是敌人
    if math.floor(layer.tag/1000000)== 101 then
      targetType=0
    else
      targetType=1
    end
    --根据curActor和curActionType等判断动作
    if math.floor(self.curActor.id/1000000)== 101 then
      --玩家在行动
      if self.curActionType==clsSceneBattle.ACTION_TYPE_ATTACK then
        --普通攻击
        if targetType==1 then
          
        end
      end
    end
  end
end

-- 退出
function clsSceneBattle:onStop()
  smLog:info("战斗场景退出")
end

