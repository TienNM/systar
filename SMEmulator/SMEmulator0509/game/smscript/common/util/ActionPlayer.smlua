--[[
  description:动作
  author:wp_g4
  date:2012/05/07
--]]

--结构定义
clsAction={}
clsAction.__index = clsAction

--字段定义
clsAction.target=nil			--动作的目标
clsAction.dead=false			--动作是否结束

-- 构造
function clsAction:new()
  local self={}
  setmetatable(self,clsAction)
  return self
end

--设置目标
function clsAction:setTarget(target)
  self.target=target
end

--更新
function clsAction:update()
  --根据具体action更新target的属性
end

--==================================================
--[[
  description:动作播放器
  author:wp_g4
  date:2012/05/07
--]]

ActionPlayer={}

ActionPlayer.actionList={}					--动作列表

--播放动作
function ActionPlayer:run(action)
  self.actionList[tostring(action)]=action
  action.dead=false
end

--更新
function ActionPlayer:update()
  for k,action in pairs(self.actionList) do
    if action.dead then
      self.actionList[k]=nil
      smLog:info("移除动作")
    else
      action:update()
    end
  end
end

--==================================================
--[[
  description:移动动作
  author:wp_g4
  date:2012/05/07
--]]

--结构定义
clsMoveAction={}
setmetatable(clsMoveAction,clsAction)
clsMoveAction.__index = clsMoveAction

--字段定义
clsMoveAction.TYPE_LINEAR=0			--移动类型：线性
clsMoveAction.TYPE_ACCELERATE=1		--移动类型：加速
clsMoveAction.TYPE_DECELERATE=2		--移动类型：减速

clsMoveAction.startX=nil			--移动起点的X坐标
clsMoveAction.startY=nil			--移动起点的Y坐标
clsMoveAction.endX=nil				--移动终点的X坐标
clsMoveAction.endY=nil				--移动终点的Y坐标
clsMoveAction.time=nil				--移动的时间
clsMoveAction.type=nil  			--移动的类型

clsMoveAction.startTime=nil

-- 构造
function clsMoveAction:new(endX,endY,time,type)
  local self={}
  setmetatable(self,clsMoveAction)
  self.endX=endX
  self.endY=endY
  self.time=time
  if type==nil then
    self.type=clsMoveAction.TYPE_LINEAR
  else
    self.type=type
  end
  return self
end

--设置目标
function clsMoveAction:setTarget(target)
  self.target=target
  self.startX=target.x
  self.startY=target.y
end

--修改坐标
function clsMoveAction:modifyLocation(x,y)
  if self.endX-self.startX>=0 then
    --X方向正向移动
    if x>=self.endX then
      self.target.x=self.endX
    else
      self.target.x=x
    end
  else
    --X方向负向移动
    if x<=self.endX then
      self.target.x=self.endX
    else
      self.target.x=x
    end
  end
  if self.endY-self.startY>=0 then
    --Y方向正向移动
    if y>=self.endY then
      self.target.y=self.endY
    else
      self.target.y=y
    end
  else
    --Y方向负向移动
    if y<=self.endY then
      self.target.y=self.endY
    else
      self.target.y=y
    end
  end
  if self.target.x==self.endX and self.target.y==self.endY then
    self.dead=true
    smLog:info("移动结束")
  end
end

--更新
function clsMoveAction:update()
  --更新target的坐标
  if self.startTime==nil then
    --尚未开始移动
    self.startTime=Game:getTime()
  end
  --根据当前时间和移动类型计算当前target的坐标
  if self.type==clsMoveAction.TYPE_LINEAR then
    --(1) 线性移动
    local vx=(self.endX-self.startX)/self.time		--X方向速度
    local vy=(self.endY-self.startY)/self.time		--Y方向速度
    local delta=Game:getTime()-self.startTime
    local x=self.startX+delta*vx
    local y=self.startY+delta*vy
    self:modifyLocation(x,y)
  elseif self.type==clsMoveAction.TYPE_ACCELERATE then
    --(2) 加速运动
    local vx=(self.endX-self.startX)/self.time		--X方向速度
    local vy=(self.endY-self.startY)/self.time		--Y方向速度
    local ax=2*vx/self.time							--X方向加速度(终点速度是起点速度的3倍)
    local ay=2*vy/self.time							--Y方向加速度
    local delta=Game:getTime()-self.startTime
    local x=self.startX+vx*delta+delta*delta*ax/2
    local y=self.startY+vy*delta+delta*delta*ay/2
    self:modifyLocation(x,y)
  elseif self.type==clsMoveAction.TYPE_DECELERATE then
    --(3) 减速运动
    local vx=(self.endX-self.startX)/self.time		--X方向速度
    local vy=(self.endY-self.startY)/self.time		--Y方向速度
    local ax=-2*vx/self.time						--X方向加速度(终点速度是起点速度的3倍)
    local ay=-2*vy/self.time						--Y方向加速度(终点速度是起点速度的3倍)
    local delta=Game:getTime()-self.startTime
    local x=self.startX+3*vx*delta+delta*delta*ax/2
    local y=self.startY+3*vy*delta+delta*delta*ay/2
    self:modifyLocation(x,y)
  else
    --未知的移动类型
    smLog:info("未知的移动类型")
    self.dead=true
    return
  end
end

--==================================================
--[[
  description:震动动作
  author:wp_g4
  date:2012/05/08
--]]

--结构定义
clsShakeAction={}
setmetatable(clsShakeAction,clsAction)
clsShakeAction.__index = clsShakeAction

--字段定义
clsShakeAction.TYPE_HORIZONTAL=0	--水平震动
clsShakeAction.TYPE_VERTICAL=1		--竖向震动
clsShakeAction.TYPE_DISORDER=2		--混乱震动

clsShakeAction.startX=nil			--震动起点的X坐标
clsShakeAction.startY=nil			--震动起点的Y坐标

clsShakeAction.range=nil			--震动幅度
clsShakeAction.period=nil  			--震动周期
clsShakeAction.times=nil			--震动次数
clsShakeAction.type=nil  			--震动类型

clsShakeAction.lastShakeTime=nil	--上次震动时间
clsShakeAction.shakeDirection=1		--震动方向（1为正向 -1为负向）

clsShakeAction.startTime=nil

-- 构造
function clsShakeAction:new(range,period,times,type)
  local self={}
  setmetatable(self,clsShakeAction)
  self.range=range
  self.period=period
  if times<0 then
    self.times=99999999
  else
    self.times=times
  end
  if type==nil then
    self.type=clsShakeAction.TYPE_HORIZONTAL
  else
    self.type=type
  end
  return self
end

--设置目标
function clsShakeAction:setTarget(target)
  self.target=target
  self.startX=target.x
  self.startY=target.y
end

--修改坐标
function clsShakeAction:modifyLocation()
  --根据震动类型改变target坐标
  if self.type==clsShakeAction.TYPE_HORIZONTAL then
    --水平震动
    self.target.x=self.target.x+self.shakeDirection*self.range
    if self.target.x==self.startX+self.range then
      self.shakeDirection=-1
    elseif self.target.x==self.startX-self.range then
      self.shakeDirection=1
    end
  elseif self.type==clsShakeAction.TYPE_VERTICAL then
    --竖向震动
    self.target.y=self.target.y+self.shakeDirection*self.range
    if self.target.y==self.startY+self.range then
      self.shakeDirection=-1
    elseif self.target.y==self.startY-self.range then
      self.shakeDirection=1
    end
  elseif self.type==clsShakeAction.TYPE_DISORDER then
    --混乱震动
    local detalX=math.random(-self.range,self.range)
    local detalY=math.random(-self.range,self.range)
    self.target.x,self.target.y=self.startX+detalX,self.startY+detalY
  else
    --未知的震动类型
    smLog:info("未知的震动类型")
    self.dead=true
  end
end

--更新
function clsShakeAction:update()
  if self.times<=0 then
    self.dead=true
    smLog:info("震动结束")
    --还原target坐标
    self.target.x,self.target.y=self.startX,self.startY
    return
  end
  local curTime=Game:getTime()
  --动作尚未执行则将self.lastShakeTime设置为-self.period以保证立即执行
  if self.lastShakeTime==nil then
    self.lastShakeTime=-self.period
  end
  local delta=curTime-self.lastShakeTime
  if delta>=self.period then
    self:modifyLocation()
    self.times=self.times-1
    self.lastShakeTime=curTime
  end
end
